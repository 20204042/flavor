{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\MyInfoHeart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyInfoHeart = () => {\n  _s();\n  const [restaurantInfo, setRestaurantInfo] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/myinfoheart', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({}) // 빈 요청\n    }).then(response => response.json()).then(data => {\n      if (data.length > 0) {\n        // 모든 찜 정보를 별도의 배열로 저장\n        setFavorites(data);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: favorites.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBAA8\\uB4E0 \\uCC1C \\uBAA9\\uB85D:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: favorites.map((favorite, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `음식점 ID: ${favorite.restaurantid}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCD1D \\uCC1C\\uD55C \\uD69F\\uC218: \", favorites.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uCC1C \\uBAA9\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MyInfoHeart, \"IfiN/ODjjRobN5QjxvOOklp1xHE=\");\n_c = MyInfoHeart;\nexport default MyInfoHeart;\nvar _c;\n$RefreshReg$(_c, \"MyInfoHeart\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyInfoHeart","_s","restaurantInfo","setRestaurantInfo","favorites","setFavorites","fetch","method","headers","body","JSON","stringify","then","response","json","data","length","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","favorite","index","restaurantid","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/MyInfoHeart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MyInfoHeart = () => {\r\n  const [restaurantInfo, setRestaurantInfo] = useState(null);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/myinfoheart', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({}), // 빈 요청\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          // 모든 찜 정보를 별도의 배열로 저장\r\n          setFavorites(data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {favorites.length > 0 ? (\r\n        <div>\r\n          <h2>모든 찜 목록:</h2>\r\n          <ul>\r\n            {favorites.map((favorite, index) => (\r\n              <li key={index}>{`음식점 ID: ${favorite.restaurantid}`}</li>\r\n            ))}\r\n          </ul>\r\n          <p>총 찜한 횟수: {favorites.length}</p>\r\n        </div>\r\n      ) : (\r\n        <p>찜 목록이 없습니다.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyInfoHeart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;IAC5B,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACnB;QACAX,YAAY,CAACU,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAAqB,QAAA,EACGhB,SAAS,CAACY,MAAM,GAAG,CAAC,gBACnBjB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBzB,OAAA;QAAAqB,QAAA,EACGhB,SAAS,CAACqB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B5B,OAAA;UAAAqB,QAAA,EAAkB,WAAUM,QAAQ,CAACE,YAAa;QAAC,GAA1CD,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0C,CACzD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLzB,OAAA;QAAAqB,QAAA,GAAG,oCAAS,EAAChB,SAAS,CAACY,MAAM;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,gBAENzB,OAAA;MAAAqB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAClB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAzCID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}