{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\FoodWorldCup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Fisher-Yates shuffle algorithm to shuffle an array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n}\nfunction FoodWorldCup() {\n  _s();\n  const initialFoodList = ['Pizza', 'Burger', 'Sushi', 'Taco', 'Pasta', 'Salad', 'Steak', 'Ice Cream'];\n  const [foodLists, setFoodLists] = useState(initialFoodList);\n  const [showWinner, setShowWinner] = useState(false);\n  const [winner, setWinner] = useState('');\n  const [userSelectedWinner, setUserSelectedWinner] = useState(null);\n  const handleSelectWinner = winners => {\n    if (winners.length === 1) {\n      setWinner(winners[0]);\n      setShowWinner(true);\n    } else {\n      const shuffledWinners = shuffleArray(winners);\n      setFoodLists(shuffledWinners);\n      setUserSelectedWinner(null);\n    }\n  };\n  const handleUserSelectWinner = selectedWinner => {\n    setUserSelectedWinner(selectedWinner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC74C\\uC2DD \\uC6D4\\uB4DC\\uCEF5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), foodLists.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD604\\uC7AC \\uB77C\\uC6B4\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match\",\n        children: foodLists[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match\",\n        children: foodLists[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC0AC\\uC6A9\\uC790 \\uC120\\uD0DD: \", userSelectedWinner || \"아직 선택하지 않음\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectWinner([foodLists[0], foodLists[1]]),\n        children: \"\\uB2E4\\uC74C \\uB77C\\uC6B4\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserSelectWinner(foodLists[0]),\n        children: \"\\uCCAB \\uBC88\\uC9F8 \\uC74C\\uC2DD \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserSelectWinner(foodLists[1]),\n        children: \"\\uB450 \\uBC88\\uC9F8 \\uC74C\\uC2DD \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), showWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCD5C\\uC885 \\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match\",\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodWorldCup, \"BUqQxNAew6QCMLPiuhZFJpkvyBU=\");\n_c = FoodWorldCup;\nexport default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// const FoodWorldCup = () => {\n//   const [round, setRound] = useState(1);\n//   const [matches, setMatches] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(null);\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\n\n//   const initializeMatches = () => {\n//     const initialMatches = [];\n//     for (let i = 0; i < options.length; i += 2) {\n//       initialMatches.push([i, i + 1]);\n//     }\n//     setMatches(initialMatches);\n//   };\n\n//   const startRound = () => {\n//     if (round <= 4) {\n//       initializeMatches();\n//     }\n//   };\n\n//   const handleOptionClick = (optionIndex) => {\n//     setSelectedOption(optionIndex);\n//     setIsNextMatchEnabled(true);\n//   };\n\n//   const handleNextMatch = () => {\n//     if (selectedOption !== null) {\n//       const updatedMatches = [...matches];\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\n//       setMatches(updatedMatches);\n//       setSelectedOption(null);\n//       setIsNextMatchEnabled(false);\n//     }\n//   };\n\n//   const handleNextRound = () => {\n//     if (matches.length === 1) {\n//       setRound(round + 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"food-world-cup\">\n//       {round <= 4 ? (\n//         <div>\n//           <h2>Round {round}</h2>\n//           <div className=\"match\">\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\n//               <button\n//                 key={optionIndex}\n//                 onClick={() => handleOptionClick(optionIndex)}\n//                 disabled={selectedOption !== null}\n//               >\n//                 {options[optionIndex]}\n//               </button>\n//             ))}\n//           </div>\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\n//             Next Match\n//           </button>\n//           {round < 4 && (\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\n//               Next Round\n//             </button>\n//           )}\n//         </div>\n//       ) : (\n//         <div className=\"result\">\n//           <h2>Result</h2>\n//           <p>You selected: {options[matches[0][0]]}</p>\n//         </div>\n//       )}\n//       {round === 1 && (\n//         <button onClick={startRound}>Start currentFoodLists</button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FoodWorldCup;\nvar _c;\n$RefreshReg$(_c, \"FoodWorldCup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","FoodWorldCup","_s","initialFoodList","foodLists","setFoodLists","showWinner","setShowWinner","winner","setWinner","userSelectedWinner","setUserSelectedWinner","handleSelectWinner","winners","shuffledWinners","handleUserSelectWinner","selectedWinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/FoodWorldCup.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Fisher-Yates shuffle algorithm to shuffle an array\r\nfunction shuffleArray(array) {\r\n  const shuffledArray = [...array];\r\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n  }\r\n  return shuffledArray;\r\n}\r\n\r\nfunction FoodWorldCup() {\r\n  const initialFoodList = ['Pizza', 'Burger', 'Sushi', 'Taco', 'Pasta', 'Salad', 'Steak', 'Ice Cream'];\r\n  const [foodLists, setFoodLists] = useState(initialFoodList);\r\n  const [showWinner, setShowWinner] = useState(false);\r\n  const [winner, setWinner] = useState('');\r\n  const [userSelectedWinner, setUserSelectedWinner] = useState(null);\r\n\r\n  const handleSelectWinner = (winners) => {\r\n    if (winners.length === 1) {\r\n      setWinner(winners[0]);\r\n      setShowWinner(true);\r\n    } else {\r\n      const shuffledWinners = shuffleArray(winners);\r\n      setFoodLists(shuffledWinners);\r\n      setUserSelectedWinner(null);\r\n    }\r\n  };\r\n\r\n  const handleUserSelectWinner = (selectedWinner) => {\r\n    setUserSelectedWinner(selectedWinner);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>음식 월드컵</h1>\r\n      {foodLists.length > 1 && (\r\n        <div>\r\n          <h2>현재 라운드</h2>\r\n          <div className=\"match\">\r\n            {foodLists[0]}\r\n          </div>\r\n          <div className=\"match\">\r\n            {foodLists[1]}\r\n          </div>\r\n          <p>사용자 선택: {userSelectedWinner || \"아직 선택하지 않음\"}</p>\r\n          <button onClick={() => handleSelectWinner([foodLists[0], foodLists[1]])}>다음 라운드</button>\r\n          <button onClick={() => handleUserSelectWinner(foodLists[0])}>첫 번째 음식 선택</button>\r\n          <button onClick={() => handleUserSelectWinner(foodLists[1])}>두 번째 음식 선택</button>\r\n        </div>\r\n      )}\r\n\r\n      {showWinner && (\r\n        <div>\r\n          <h2>최종 결과</h2>\r\n          <div className=\"match\">\r\n            {winner}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodWorldCup;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// const FoodWorldCup = () => {\r\n//   const [round, setRound] = useState(1);\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\r\n\r\n//   const initializeMatches = () => {\r\n//     const initialMatches = [];\r\n//     for (let i = 0; i < options.length; i += 2) {\r\n//       initialMatches.push([i, i + 1]);\r\n//     }\r\n//     setMatches(initialMatches);\r\n//   };\r\n\r\n//   const startRound = () => {\r\n//     if (round <= 4) {\r\n//       initializeMatches();\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (optionIndex) => {\r\n//     setSelectedOption(optionIndex);\r\n//     setIsNextMatchEnabled(true);\r\n//   };\r\n\r\n//   const handleNextMatch = () => {\r\n//     if (selectedOption !== null) {\r\n//       const updatedMatches = [...matches];\r\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\r\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\r\n//       setMatches(updatedMatches);\r\n//       setSelectedOption(null);\r\n//       setIsNextMatchEnabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleNextRound = () => {\r\n//     if (matches.length === 1) {\r\n//       setRound(round + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"food-world-cup\">\r\n//       {round <= 4 ? (\r\n//         <div>\r\n//           <h2>Round {round}</h2>\r\n//           <div className=\"match\">\r\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\r\n//               <button\r\n//                 key={optionIndex}\r\n//                 onClick={() => handleOptionClick(optionIndex)}\r\n//                 disabled={selectedOption !== null}\r\n//               >\r\n//                 {options[optionIndex]}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\r\n//             Next Match\r\n//           </button>\r\n//           {round < 4 && (\r\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\r\n//               Next Round\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"result\">\r\n//           <h2>Result</h2>\r\n//           <p>You selected: {options[matches[0][0]]}</p>\r\n//         </div>\r\n//       )}\r\n//       {round === 1 && (\r\n//         <button onClick={startRound}>Start currentFoodLists</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FoodWorldCup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}