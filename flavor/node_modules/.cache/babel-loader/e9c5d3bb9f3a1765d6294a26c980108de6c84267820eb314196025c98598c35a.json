{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\CreatePostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePostForm() {\n  _s();\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleCreatePost = async () => {\n    try {\n      if (!newPost.title || !newPost.content) {\n        setError('제목과 내용을 모두 입력해주세요.');\n        return;\n      }\n      const currentDate = new Date().toISOString().slice(0, 19).replace('T', ' ');\n      const postData = {\n        title: newPost.title,\n        content: newPost.content,\n        date: currentDate,\n        views: 0\n      };\n      const response = await fetch('http://localhost:3001/createpostform', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      if (!response.ok) {\n        throw new Error('오류1: ' + response.statusText);\n      }\n      const data = await response.json();\n      if (data.success) {\n        alert('게시물이 성공적으로 작성되었습니다.');\n        setNewPost({\n          title: '',\n          content: ''\n        });\n        navigate('/boardlist');\n      } else {\n        alert('게시물 작성 중 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      console.error('API 요청 오류:', error);\n      alert('오류2: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\",\n      value: newPost.title,\n      onChange: e => setNewPost({\n        ...newPost,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"\\uB0B4\\uC6A9\",\n      value: newPost.content,\n      onChange: e => setNewPost({\n        ...newPost,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePost,\n      children: \"\\uC791\\uC131 \\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePostForm, \"vrqFH3wMCy1ZwLiZPV6rArPf+fg=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostForm;\nexport default CreatePostForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreatePostForm","_s","newPost","setNewPost","title","content","error","setError","navigate","handleCreatePost","currentDate","Date","toISOString","slice","replace","postData","date","views","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","success","alert","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/CreatePostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CreatePostForm() {\r\n  const [newPost, setNewPost] = useState({ title: '', content: '' });\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreatePost = async () => {\r\n    try {\r\n      if (!newPost.title || !newPost.content) {\r\n        setError('제목과 내용을 모두 입력해주세요.');\r\n        return;\r\n      }\r\n\r\n      const currentDate = new Date().toISOString().slice(0, 19).replace('T', ' ');\r\n\r\n      const postData = {\r\n        title: newPost.title,\r\n        content: newPost.content,\r\n        date: currentDate,\r\n        views: 0,\r\n      };\r\n\r\n      const response = await fetch('http://localhost:3001/createpostform', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(postData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('오류1: ' + response.statusText);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        alert('게시물이 성공적으로 작성되었습니다.');\r\n        setNewPost({ title: '', content: '' });\r\n        navigate('/boardlist');\r\n      } else {\r\n        alert('게시물 작성 중 오류가 발생했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('API 요청 오류:', error);\r\n      alert('오류2: ' + error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>게시물 작성</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"제목\"\r\n        value={newPost.title}\r\n        onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\r\n      />\r\n      <textarea\r\n        placeholder=\"내용\"\r\n        value={newPost.content}\r\n        onChange={(e) => setNewPost({ ...newPost, content: e.target.value })}\r\n      />\r\n      <button onClick={handleCreatePost}>작성 완료</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}