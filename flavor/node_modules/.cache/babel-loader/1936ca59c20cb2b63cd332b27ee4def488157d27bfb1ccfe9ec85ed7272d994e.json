{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\FoodWorldCup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FoodWorldCup() {\n  _s();\n  const [n, setN] = useState(0);\n  const [v, setV] = useState([]);\n  const [dp, setDp] = useState([]);\n  const [winner, setWinner] = useState([]);\n  const solve = (i, j) => {\n    if (i === j) return 0;\n    let res = 1e9 + 7;\n    for (let k = i; k < j; k++) {\n      res = Math.min(res, solve(i, k) + solve(k + 1, j) + Math.abs(winner[i][k] - winner[k + 1][j]));\n    }\n    return res;\n  };\n  const initializeDp = () => {\n    const newDp = new Array(n);\n    for (let i = 0; i < n; i++) {\n      newDp[i] = new Array(n).fill(-1);\n    }\n    setDp(newDp);\n  };\n  const handleInputChange = e => {\n    const newValue = e.target.value.split(' ').map(Number);\n    setV(newValue);\n  };\n  useEffect(() => {\n    if (n > 0) {\n      const newWinner = new Array(n);\n      for (let i = 0; i < n; i++) {\n        newWinner[i] = new Array(n);\n      }\n      for (let i = 0; i < n; i++) {\n        newWinner[i][i] = v[i];\n        for (let j = i + 1; j < n; j++) {\n          newWinner[i][j] = Math.min(newWinner[i][j - 1], v[j]);\n        }\n      }\n      setWinner(newWinner);\n      initializeDp();\n    }\n  }, [n, v]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Transformation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter the number of elements (n):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: n,\n        onChange: e => setN(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), n > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter the elements (space-separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: v.join(' '),\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(solve(0, n - 1)),\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodWorldCup, \"4DHRfI4yXUgIjO152CWwQ/HZnqo=\");\n_c = FoodWorldCup;\nexport default FoodWorldCup;\n\n// import React, { useState, useEffect } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// function FoodWorldCup() {\n//   const [round, setRound] = useState(0);\n//   const [selectedOptions, setSelectedOptions] = useState([]);\n//   const [remainingOptions, setRemainingOptions] = useState([...options]);\n//   const [userSelections, setUserSelections] = useState([]);\n\n//   const handleOptionSelection = (option) => {\n//     setUserSelections((prevSelections) => [...prevSelections, option]);\n//     setSelectedOptions((prevOptions) => prevOptions.filter((item) => item !== option));\n//     setRemainingOptions((prevOptions) => prevOptions.filter((item) => item !== option));\n//   };\n\n//   const startNewRound = () => {\n//     if (round < 3) { \n//       setRound((prevRound) => prevRound + 1);\n//       setSelectedOptions([]);\n//     } else {\n//       alert(`당신이 원하는 음식은 '${userSelections[0]}'입니다!`);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (round < 3) { \n//       const randomOptions = [];\n//       for (let i = 0; i < 2; i++) { \n//         const randomIndex = Math.floor(Math.random() * remainingOptions.length);\n//         randomOptions.push(remainingOptions[randomIndex]);\n//       }\n//       setSelectedOptions(randomOptions);\n//     }\n//   }, [round, remainingOptions]);\n\n//   return (\n//     <div>\n//       <h2>라운드 {round + 1}</h2>\n//       {round < 3 ? (\n//         <div>\n//           <p>원하는 것을 선택하세요:</p>\n//           {selectedOptions.map((option, index) => (\n//             <button key={index} onClick={() => handleOptionSelection(option)}>{option}</button>\n//           ))}\n//           {userSelections.length > 0 && (\n//             <p>배열에 저장된 값은: {userSelections.join(\", \")}</p>\n//           )}\n//         </div>\n//       ) : (\n//         <button onClick={startNewRound}>결과 확인</button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// const FoodWorldCup = () => {\n//   const [round, setRound] = useState(1);\n//   const [matches, setMatches] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(null);\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\n\n//   const initializeMatches = () => {\n//     const initialMatches = [];\n//     for (let i = 0; i < options.length; i += 2) {\n//       initialMatches.push([i, i + 1]);\n//     }\n//     setMatches(initialMatches);\n//   };\n\n//   const startRound = () => {\n//     if (round <= 4) {\n//       initializeMatches();\n//     }\n//   };\n\n//   const handleOptionClick = (optionIndex) => {\n//     setSelectedOption(optionIndex);\n//     setIsNextMatchEnabled(true);\n//   };\n\n//   const handleNextMatch = () => {\n//     if (selectedOption !== null) {\n//       const updatedMatches = [...matches];\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\n//       setMatches(updatedMatches);\n//       setSelectedOption(null);\n//       setIsNextMatchEnabled(false);\n//     }\n//   };\n\n//   const handleNextRound = () => {\n//     if (matches.length === 1) {\n//       setRound(round + 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"food-world-cup\">\n//       {round <= 4 ? (\n//         <div>\n//           <h2>Round {round}</h2>\n//           <div className=\"match\">\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\n//               <button\n//                 key={optionIndex}\n//                 onClick={() => handleOptionClick(optionIndex)}\n//                 disabled={selectedOption !== null}\n//               >\n//                 {options[optionIndex]}\n//               </button>\n//             ))}\n//           </div>\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\n//             Next Match\n//           </button>\n//           {round < 4 && (\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\n//               Next Round\n//             </button>\n//           )}\n//         </div>\n//       ) : (\n//         <div className=\"result\">\n//           <h2>Result</h2>\n//           <p>You selected: {options[matches[0][0]]}</p>\n//         </div>\n//       )}\n//       {round === 1 && (\n//         <button onClick={startRound}>Start Tournament</button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FoodWorldCup;\nvar _c;\n$RefreshReg$(_c, \"FoodWorldCup\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FoodWorldCup","_s","n","setN","v","setV","dp","setDp","winner","setWinner","solve","i","j","res","k","Math","min","abs","initializeDp","newDp","Array","fill","handleInputChange","e","newValue","target","value","split","map","Number","newWinner","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","join","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/FoodWorldCup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction FoodWorldCup() {\r\n  const [n, setN] = useState(0);\r\n  const [v, setV] = useState([]);\r\n  const [dp, setDp] = useState([]);\r\n  const [winner, setWinner] = useState([]);\r\n\r\n  const solve = (i, j) => {\r\n    if (i === j) return 0;\r\n    \r\n    let res = 1e9 + 7;\r\n    for (let k = i; k < j; k++) {\r\n      res = Math.min(\r\n        res,\r\n        solve(i, k) + solve(k + 1, j) + Math.abs(winner[i][k] - winner[k + 1][j])\r\n      );\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const initializeDp = () => {\r\n    const newDp = new Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n      newDp[i] = new Array(n).fill(-1);\r\n    }\r\n    setDp(newDp);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const newValue = e.target.value.split(' ').map(Number);\r\n    setV(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (n > 0) {\r\n      const newWinner = new Array(n);\r\n      for (let i = 0; i < n; i++) {\r\n        newWinner[i] = new Array(n);\r\n      }\r\n\r\n      for (let i = 0; i < n; i++) {\r\n        newWinner[i][i] = v[i];\r\n        for (let j = i + 1; j < n; j++) {\r\n          newWinner[i][j] = Math.min(newWinner[i][j - 1], v[j]);\r\n        }\r\n      }\r\n\r\n      setWinner(newWinner);\r\n      initializeDp();\r\n    }\r\n  }, [n, v]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>React Transformation</h1>\r\n      <label>\r\n        Enter the number of elements (n):\r\n        <input type=\"number\" value={n} onChange={(e) => setN(Number(e.target.value))} />\r\n      </label>\r\n      <br />\r\n      {n > 0 && (\r\n        <div>\r\n          <label>\r\n            Enter the elements (space-separated):\r\n            <input type=\"text\" value={v.join(' ')} onChange={handleInputChange} />\r\n          </label>\r\n          <br />\r\n          <button onClick={() => console.log(solve(0, n - 1))}>Calculate</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodWorldCup;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// function FoodWorldCup() {\r\n//   const [round, setRound] = useState(0);\r\n//   const [selectedOptions, setSelectedOptions] = useState([]);\r\n//   const [remainingOptions, setRemainingOptions] = useState([...options]);\r\n//   const [userSelections, setUserSelections] = useState([]);\r\n\r\n//   const handleOptionSelection = (option) => {\r\n//     setUserSelections((prevSelections) => [...prevSelections, option]);\r\n//     setSelectedOptions((prevOptions) => prevOptions.filter((item) => item !== option));\r\n//     setRemainingOptions((prevOptions) => prevOptions.filter((item) => item !== option));\r\n//   };\r\n\r\n//   const startNewRound = () => {\r\n//     if (round < 3) { \r\n//       setRound((prevRound) => prevRound + 1);\r\n//       setSelectedOptions([]);\r\n//     } else {\r\n//       alert(`당신이 원하는 음식은 '${userSelections[0]}'입니다!`);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (round < 3) { \r\n//       const randomOptions = [];\r\n//       for (let i = 0; i < 2; i++) { \r\n//         const randomIndex = Math.floor(Math.random() * remainingOptions.length);\r\n//         randomOptions.push(remainingOptions[randomIndex]);\r\n//       }\r\n//       setSelectedOptions(randomOptions);\r\n//     }\r\n//   }, [round, remainingOptions]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>라운드 {round + 1}</h2>\r\n//       {round < 3 ? (\r\n//         <div>\r\n//           <p>원하는 것을 선택하세요:</p>\r\n//           {selectedOptions.map((option, index) => (\r\n//             <button key={index} onClick={() => handleOptionSelection(option)}>{option}</button>\r\n//           ))}\r\n//           {userSelections.length > 0 && (\r\n//             <p>배열에 저장된 값은: {userSelections.join(\", \")}</p>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <button onClick={startNewRound}>결과 확인</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FoodWorldCup;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// const FoodWorldCup = () => {\r\n//   const [round, setRound] = useState(1);\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\r\n\r\n//   const initializeMatches = () => {\r\n//     const initialMatches = [];\r\n//     for (let i = 0; i < options.length; i += 2) {\r\n//       initialMatches.push([i, i + 1]);\r\n//     }\r\n//     setMatches(initialMatches);\r\n//   };\r\n\r\n//   const startRound = () => {\r\n//     if (round <= 4) {\r\n//       initializeMatches();\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (optionIndex) => {\r\n//     setSelectedOption(optionIndex);\r\n//     setIsNextMatchEnabled(true);\r\n//   };\r\n\r\n//   const handleNextMatch = () => {\r\n//     if (selectedOption !== null) {\r\n//       const updatedMatches = [...matches];\r\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\r\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\r\n//       setMatches(updatedMatches);\r\n//       setSelectedOption(null);\r\n//       setIsNextMatchEnabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleNextRound = () => {\r\n//     if (matches.length === 1) {\r\n//       setRound(round + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"food-world-cup\">\r\n//       {round <= 4 ? (\r\n//         <div>\r\n//           <h2>Round {round}</h2>\r\n//           <div className=\"match\">\r\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\r\n//               <button\r\n//                 key={optionIndex}\r\n//                 onClick={() => handleOptionClick(optionIndex)}\r\n//                 disabled={selectedOption !== null}\r\n//               >\r\n//                 {options[optionIndex]}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\r\n//             Next Match\r\n//           </button>\r\n//           {round < 4 && (\r\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\r\n//               Next Round\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"result\">\r\n//           <h2>Result</h2>\r\n//           <p>You selected: {options[matches[0][0]]}</p>\r\n//         </div>\r\n//       )}\r\n//       {round === 1 && (\r\n//         <button onClick={startRound}>Start Tournament</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FoodWorldCup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}