{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\FoodWorldCup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\nfunction FoodWorldCup() {\n  _s();\n  const [round, setRound] = useState(1);\n  const [foods, setFoods] = useState([]);\n  const [selectedFoods, setSelectedFoods] = useState([]);\n  useEffect(() => {\n    if (round === 1) {\n      setFoods(shuffle([...initialValues]));\n    } else {\n      const newFoods = [];\n      for (let i = 0; i < foods.length; i += 2) {\n        newFoods.push([foods[i], foods[i + 1]]);\n      }\n      setFoods(newFoods);\n    }\n  }, [round]);\n  const handleFoodClick = food => {\n    setSelectedFoods([...selectedFoods, food]);\n    if (selectedFoods.length === 2) {\n      setRound(round + 1);\n      setSelectedFoods([]);\n    }\n  };\n\n  // 배열을 랜덤하게 섞는 함수\n  function shuffle(array) {\n    const newArray = [...array];\n    for (let i = newArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n    }\n    return newArray;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Food World Cup - Round \", round]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: round <= 3 && foods.map((matchup, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food\",\n        onClick: () => handleFoodClick(matchup),\n        children: [matchup[0], \" vs \", matchup[1]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-foods\",\n      children: selectedFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: food\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodWorldCup, \"xwYrzZxUo+fk4gWOBwIQh/EMO0U=\");\n_c = FoodWorldCup;\nexport default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// const FoodWorldCup = () => {\n//   const [round, setRound] = useState(1);\n//   const [matches, setMatches] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(null);\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\n\n//   const initializeMatches = () => {\n//     const initialMatches = [];\n//     for (let i = 0; i < options.length; i += 2) {\n//       initialMatches.push([i, i + 1]);\n//     }\n//     setMatches(initialMatches);\n//   };\n\n//   const startRound = () => {\n//     if (round <= 4) {\n//       initializeMatches();\n//     }\n//   };\n\n//   const handleOptionClick = (optionIndex) => {\n//     setSelectedOption(optionIndex);\n//     setIsNextMatchEnabled(true);\n//   };\n\n//   const handleNextMatch = () => {\n//     if (selectedOption !== null) {\n//       const updatedMatches = [...matches];\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\n//       setMatches(updatedMatches);\n//       setSelectedOption(null);\n//       setIsNextMatchEnabled(false);\n//     }\n//   };\n\n//   const handleNextRound = () => {\n//     if (matches.length === 1) {\n//       setRound(round + 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"food-world-cup\">\n//       {round <= 4 ? (\n//         <div>\n//           <h2>Round {round}</h2>\n//           <div className=\"match\">\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\n//               <button\n//                 key={optionIndex}\n//                 onClick={() => handleOptionClick(optionIndex)}\n//                 disabled={selectedOption !== null}\n//               >\n//                 {options[optionIndex]}\n//               </button>\n//             ))}\n//           </div>\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\n//             Next Match\n//           </button>\n//           {round < 4 && (\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\n//               Next Round\n//             </button>\n//           )}\n//         </div>\n//       ) : (\n//         <div className=\"result\">\n//           <h2>Result</h2>\n//           <p>You selected: {options[matches[0][0]]}</p>\n//         </div>\n//       )}\n//       {round === 1 && (\n//         <button onClick={startRound}>Start Tournament</button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FoodWorldCup;\nvar _c;\n$RefreshReg$(_c, \"FoodWorldCup\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialValues","FoodWorldCup","_s","round","setRound","foods","setFoods","selectedFoods","setSelectedFoods","shuffle","newFoods","i","length","push","handleFoodClick","food","array","newArray","j","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","matchup","index","onClick","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/FoodWorldCup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst initialValues = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\nfunction FoodWorldCup() {\r\n  const [round, setRound] = useState(1);\r\n  const [foods, setFoods] = useState([]);\r\n  const [selectedFoods, setSelectedFoods] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (round === 1) {\r\n      setFoods(shuffle([...initialValues]));\r\n    } else {\r\n      const newFoods = [];\r\n      for (let i = 0; i < foods.length; i += 2) {\r\n        newFoods.push([foods[i], foods[i + 1]]);\r\n      }\r\n      setFoods(newFoods);\r\n    }\r\n  }, [round]);\r\n\r\n  const handleFoodClick = (food) => {\r\n    setSelectedFoods([...selectedFoods, food]);\r\n\r\n    if (selectedFoods.length === 2) {\r\n      setRound(round + 1);\r\n      setSelectedFoods([]);\r\n    }\r\n  };\r\n\r\n  // 배열을 랜덤하게 섞는 함수\r\n  function shuffle(array) {\r\n    const newArray = [...array];\r\n    for (let i = newArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n    }\r\n    return newArray;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Food World Cup - Round {round}</h1>\r\n      <div className=\"matchup\">\r\n        {round <= 3 && foods.map((matchup, index) => (\r\n          <div key={index} className=\"food\" onClick={() => handleFoodClick(matchup)}>\r\n            {matchup[0]} vs {matchup[1]}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"selected-foods\">\r\n        {selectedFoods.map((food, index) => (\r\n          <div key={index}>{food}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodWorldCup;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// const FoodWorldCup = () => {\r\n//   const [round, setRound] = useState(1);\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\r\n\r\n//   const initializeMatches = () => {\r\n//     const initialMatches = [];\r\n//     for (let i = 0; i < options.length; i += 2) {\r\n//       initialMatches.push([i, i + 1]);\r\n//     }\r\n//     setMatches(initialMatches);\r\n//   };\r\n\r\n//   const startRound = () => {\r\n//     if (round <= 4) {\r\n//       initializeMatches();\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (optionIndex) => {\r\n//     setSelectedOption(optionIndex);\r\n//     setIsNextMatchEnabled(true);\r\n//   };\r\n\r\n//   const handleNextMatch = () => {\r\n//     if (selectedOption !== null) {\r\n//       const updatedMatches = [...matches];\r\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\r\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\r\n//       setMatches(updatedMatches);\r\n//       setSelectedOption(null);\r\n//       setIsNextMatchEnabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleNextRound = () => {\r\n//     if (matches.length === 1) {\r\n//       setRound(round + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"food-world-cup\">\r\n//       {round <= 4 ? (\r\n//         <div>\r\n//           <h2>Round {round}</h2>\r\n//           <div className=\"match\">\r\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\r\n//               <button\r\n//                 key={optionIndex}\r\n//                 onClick={() => handleOptionClick(optionIndex)}\r\n//                 disabled={selectedOption !== null}\r\n//               >\r\n//                 {options[optionIndex]}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\r\n//             Next Match\r\n//           </button>\r\n//           {round < 4 && (\r\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\r\n//               Next Round\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"result\">\r\n//           <h2>Result</h2>\r\n//           <p>You selected: {options[matches[0][0]]}</p>\r\n//         </div>\r\n//       )}\r\n//       {round === 1 && (\r\n//         <button onClick={startRound}>Start Tournament</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FoodWorldCup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}