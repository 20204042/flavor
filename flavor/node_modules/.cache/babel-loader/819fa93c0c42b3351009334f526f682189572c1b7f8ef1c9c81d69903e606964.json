{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\CreatePostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePostForm() {\n  _s();\n  const [newPost1, setNewPost] = useState({\n    title: '',\n    content: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleCreatePost = async () => {\n    try {\n      if (!newPost1.title || !newPost1.content) {\n        setError('제목과 내용을 모두 입력해주세요.');\n        return;\n      }\n      const currentDate = new Date().toISOString().slice(0, 19).replace('T', ' ');\n      const contentWithBr = newPost1.content.replace(/\\n/g, '<br>');\n      const postData = {\n        title: newPost1.title,\n        content: newPost1.content,\n        date: currentDate,\n        views: 0\n      };\n      const response = await fetch('http://localhost:3001/boardlist/createpostform', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      if (!response.ok) {\n        throw new Error('오류1: ' + response.statusText);\n      }\n\n      // DB 저장이 성공한 경우에만 페이지 이동\n      setNewPost({\n        title: '',\n        content: ''\n      });\n      navigate('/boardlist');\n    } catch (error) {\n      console.error('API 요청 오류:', error);\n      alert('오류2: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .flavor_logo {\n          top: 20px;\n          display: block;\n          margin: 0 auto;\n          margin-bottom: 10px;\n        }\n\n        .write h2 {\n          font-size: 24px;\n          margin-top: 30px;\n          margin-bottom: 30px;\n          text-align: center;\n        }\n        \n        .write input {\n          width: 80%;\n          padding: 10px;\n          margin: 20px auto;\n          display: block;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          font-size: 14px;\n        }\n\n        .write textarea {\n          width: 80%;\n          height: 400px;\n          padding: 10px;\n          margin: 10px auto;\n          display: block;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          resize: none;\n          font-size: 14px;\n        }\n        \n        .write button {\n          top: 20px;\n          background-color: #ff6480;\n          color: white;\n          border: none;\n          border-radius: 5px;\n          padding: 10px 20px;\n          cursor: pointer;\n          transition: background-color 0.3s;\n          display: block;\n          margin: 0 auto;\n        }\n        \n        .write button:hover {\n          background-color: #c24e63;\n        }\n        \n        .error_message {\n          color: red;\n          margin-top: 10px;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"flavor_logo\",\n        className: \"flavor_logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNCkp7%2Fbtshz0iU8wZ%2FGdartd1kgTj0ZXMhJ0IKwk%2Fimg.png\",\n          width: \"300\",\n          height: \"105\",\n          alt: \"flavor_logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAC8C\\uC2DC\\uBB3C \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC81C\\uBAA9\",\n        value: newPost1.title,\n        onChange: e => setNewPost({\n          ...newPost1,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\uB0B4\\uC6A9\",\n        value: newPost1.content,\n        onChange: e => setNewPost({\n          ...newPost1,\n          content: e.target.value\n        }),\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePost,\n        children: \"\\uC791\\uC131 \\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error_message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePostForm, \"Ofj1wk+d541TFJNjO8BXglCRnYo=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostForm;\nexport default CreatePostForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","CreatePostForm","_s","newPost1","setNewPost","title","content","error","setError","navigate","handleCreatePost","currentDate","Date","toISOString","slice","replace","contentWithBr","postData","date","views","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","console","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","to","type","className","src","width","height","alt","placeholder","value","onChange","e","target","rows","onClick","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/CreatePostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction CreatePostForm() {\r\n  const [newPost1, setNewPost] = useState({ title: '', content: '' });\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreatePost = async () => {\r\n    try {\r\n      if (!newPost1.title || !newPost1.content) {\r\n        setError('제목과 내용을 모두 입력해주세요.');\r\n        return;\r\n      }\r\n\r\n      const currentDate = new Date().toISOString().slice(0, 19).replace('T', ' ');\r\n\r\n      const contentWithBr = newPost1.content.replace(/\\n/g, '<br>');\r\n\r\n      const postData = {\r\n        title: newPost1.title,\r\n        content: newPost1.content,\r\n        date: currentDate,\r\n        views: 0,\r\n      };\r\n\r\n      const response = await fetch('http://localhost:3001/boardlist/createpostform', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(postData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('오류1: ' + response.statusText);\r\n      }\r\n      \r\n      // DB 저장이 성공한 경우에만 페이지 이동\r\n      setNewPost({ title: '', content: '' });\r\n      navigate('/boardlist');\r\n    } catch (error) {\r\n      console.error('API 요청 오류:', error);\r\n      alert('오류2: ' + error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <style>\r\n        {`\r\n        .flavor_logo {\r\n          top: 20px;\r\n          display: block;\r\n          margin: 0 auto;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .write h2 {\r\n          font-size: 24px;\r\n          margin-top: 30px;\r\n          margin-bottom: 30px;\r\n          text-align: center;\r\n        }\r\n        \r\n        .write input {\r\n          width: 80%;\r\n          padding: 10px;\r\n          margin: 20px auto;\r\n          display: block;\r\n          border: 1px solid #ccc;\r\n          border-radius: 5px;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .write textarea {\r\n          width: 80%;\r\n          height: 400px;\r\n          padding: 10px;\r\n          margin: 10px auto;\r\n          display: block;\r\n          border: 1px solid #ccc;\r\n          border-radius: 5px;\r\n          resize: none;\r\n          font-size: 14px;\r\n        }\r\n        \r\n        .write button {\r\n          top: 20px;\r\n          background-color: #ff6480;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 5px;\r\n          padding: 10px 20px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n          display: block;\r\n          margin: 0 auto;\r\n        }\r\n        \r\n        .write button:hover {\r\n          background-color: #c24e63;\r\n        }\r\n        \r\n        .error_message {\r\n          color: red;\r\n          margin-top: 10px;\r\n          }\r\n        `}\r\n      </style>\r\n      <Link to=\"/\">\r\n        <button type=\"flavor_logo\" className=\"flavor_logo\">\r\n          <img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNCkp7%2Fbtshz0iU8wZ%2FGdartd1kgTj0ZXMhJ0IKwk%2Fimg.png\" width=\"300\" height=\"105\" alt=\"flavor_logo\" />\r\n        </button>\r\n      </Link>\r\n      <div className=\"write\">\r\n        <h2>게시물 작성</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"제목\"\r\n          value={newPost1.title}\r\n          onChange={(e) => setNewPost({ ...newPost1, title: e.target.value })}\r\n        />\r\n        <textarea\r\n          placeholder=\"내용\"\r\n          value={newPost1.content}\r\n          onChange={(e) => setNewPost({ ...newPost1, content: e.target.value })}\r\n          rows=\"10\"\r\n        />\r\n        <button onClick={handleCreatePost}>작성 완료</button>\r\n        {error && <p className=\"error_message\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}