{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\FoodWorldCup.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FoodWorldCup extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = item => {\n      const {\n        items,\n        round\n      } = this.state;\n      const updatedItems = [...items];\n      updatedItems[round] = item;\n      this.setState({\n        items: updatedItems,\n        round: round + 1\n      });\n    };\n    this.state = {\n      items: ['아이템 1', '아이템 2', '아이템 3', '아이템 4', '아이템 5', '아이템 6', '아이템 7', '아이템 8'],\n      round: 0\n    };\n  }\n  render() {\n    const {\n      items,\n      round\n    } = this.state;\n    if (round >= items.length - 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC774\\uC0C1\\uD615 \\uC6D4\\uB4DC\\uCEF5 \\uC885\\uB8CC! \\uCD5C\\uC885 \\uC544\\uC774\\uD15C: \", items[round]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC774\\uC0C1\\uD615 \\uC6D4\\uB4DC\\uCEF5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uB77C\\uC6B4\\uB4DC \", round + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.slice(round, round + 2).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => this.handleItemClick(item),\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// // Fisher-Yates shuffle algorithm to shuffle an array\n// function shuffleArray(array) {\n//   const shuffledArray = [...array];\n//   for (let i = shuffledArray.length - 1; i > 0; i--) {\n//     const j = Math.floor(Math.random() * (i + 1));\n//     [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n//   }\n//   return shuffledArray;\n// }\n\n// function FoodWorldCup() {\n//   const initialFoodList = ['Pizza', 'Burger', 'Sushi', 'Taco', 'Pasta', 'Salad', 'Steak', 'Ice Cream'];\n//   const [foodLists, setFoodLists] = useState(initialFoodList);\n//   const [showWinner, setShowWinner] = useState(false);\n//   const [winner, setWinner] = useState('');\n//   const [userSelectedWinner, setUserSelectedWinner] = useState(null);\n\n//   const handleSelectWinner = (winners) => {\n//     if (winners.length === 1) {\n//       setWinner(winners[0]);\n//       setShowWinner(true);\n//     } else {\n//       const shuffledWinners = shuffleArray(winners);\n//       setFoodLists(shuffledWinners);\n//       setUserSelectedWinner(null);\n//     }\n//   };\n\n//   const handleUserSelectWinner = (selectedWinner) => {\n//     setUserSelectedWinner(selectedWinner);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>음식 월드컵</h1>\n//       {foodLists.length > 1 && (\n//         <div>\n//           <h2>현재 라운드</h2>\n//           <div className=\"match\">\n//             {foodLists[0]}\n//           </div>\n//           <div className=\"match\">\n//             {foodLists[1]}\n//           </div>\n//           <p>사용자 선택: {userSelectedWinner || \"아직 선택하지 않음\"}</p>\n//           <button onClick={() => handleSelectWinner([foodLists[0], foodLists[1]])}>다음 라운드</button>\n//           <button onClick={() => handleUserSelectWinner(foodLists[0])}>첫 번째 음식 선택</button>\n//           <button onClick={() => handleUserSelectWinner(foodLists[1])}>두 번째 음식 선택</button>\n//         </div>\n//       )}\n\n//       {showWinner && (\n//         <div>\n//           <h2>최종 결과</h2>\n//           <div className=\"match\">\n//             {winner}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// const FoodWorldCup = () => {\n//   const [round, setRound] = useState(1);\n//   const [matches, setMatches] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(null);\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\n\n//   const initializeMatches = () => {\n//     const initialMatches = [];\n//     for (let i = 0; i < options.length; i += 2) {\n//       initialMatches.push([i, i + 1]);\n//     }\n//     setMatches(initialMatches);\n//   };\n\n//   const startRound = () => {\n//     if (round <= 4) {\n//       initializeMatches();\n//     }\n//   };\n\n//   const handleOptionClick = (optionIndex) => {\n//     setSelectedOption(optionIndex);\n//     setIsNextMatchEnabled(true);\n//   };\n\n//   const handleNextMatch = () => {\n//     if (selectedOption !== null) {\n//       const updatedMatches = [...matches];\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\n//       setMatches(updatedMatches);\n//       setSelectedOption(null);\n//       setIsNextMatchEnabled(false);\n//     }\n//   };\n\n//   const handleNextRound = () => {\n//     if (matches.length === 1) {\n//       setRound(round + 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"food-world-cup\">\n//       {round <= 4 ? (\n//         <div>\n//           <h2>Round {round}</h2>\n//           <div className=\"match\">\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\n//               <button\n//                 key={optionIndex}\n//                 onClick={() => handleOptionClick(optionIndex)}\n//                 disabled={selectedOption !== null}\n//               >\n//                 {options[optionIndex]}\n//               </button>\n//             ))}\n//           </div>\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\n//             Next Match\n//           </button>\n//           {round < 4 && (\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\n//               Next Round\n//             </button>\n//           )}\n//         </div>\n//       ) : (\n//         <div className=\"result\">\n//           <h2>Result</h2>\n//           <p>You selected: {options[matches[0][0]]}</p>\n//         </div>\n//       )}\n//       {round === 1 && (\n//         <button onClick={startRound}>Start currentFoodLists</button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FoodWorldCup;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","FoodWorldCup","constructor","props","handleItemClick","item","items","round","state","updatedItems","setState","render","length","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","onClick"],"sources":["C:/CD_REACT/flavor/flavor/src/FoodWorldCup.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FoodWorldCup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [\r\n        '아이템 1',\r\n        '아이템 2',\r\n        '아이템 3',\r\n        '아이템 4',\r\n        '아이템 5',\r\n        '아이템 6',\r\n        '아이템 7',\r\n        '아이템 8',\r\n      ],\r\n      round: 0,\r\n    };\r\n  }\r\n\r\n  handleItemClick = (item) => {\r\n    const { items, round } = this.state;\r\n    const updatedItems = [...items];\r\n    updatedItems[round] = item;\r\n\r\n    this.setState({\r\n      items: updatedItems,\r\n      round: round + 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { items, round } = this.state;\r\n\r\n    if (round >= items.length - 1) {\r\n      return <div>이상형 월드컵 종료! 최종 아이템: {items[round]}</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>이상형 월드컵</h1>\r\n        <h2>라운드 {round + 1}</h2>\r\n        <ul>\r\n          {items.slice(round, round + 2).map((item, index) => (\r\n            <li key={index} onClick={() => this.handleItemClick(item)}>\r\n              {item}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodWorldCup;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// // Fisher-Yates shuffle algorithm to shuffle an array\r\n// function shuffleArray(array) {\r\n//   const shuffledArray = [...array];\r\n//   for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n//     const j = Math.floor(Math.random() * (i + 1));\r\n//     [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n//   }\r\n//   return shuffledArray;\r\n// }\r\n\r\n// function FoodWorldCup() {\r\n//   const initialFoodList = ['Pizza', 'Burger', 'Sushi', 'Taco', 'Pasta', 'Salad', 'Steak', 'Ice Cream'];\r\n//   const [foodLists, setFoodLists] = useState(initialFoodList);\r\n//   const [showWinner, setShowWinner] = useState(false);\r\n//   const [winner, setWinner] = useState('');\r\n//   const [userSelectedWinner, setUserSelectedWinner] = useState(null);\r\n\r\n//   const handleSelectWinner = (winners) => {\r\n//     if (winners.length === 1) {\r\n//       setWinner(winners[0]);\r\n//       setShowWinner(true);\r\n//     } else {\r\n//       const shuffledWinners = shuffleArray(winners);\r\n//       setFoodLists(shuffledWinners);\r\n//       setUserSelectedWinner(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleUserSelectWinner = (selectedWinner) => {\r\n//     setUserSelectedWinner(selectedWinner);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>음식 월드컵</h1>\r\n//       {foodLists.length > 1 && (\r\n//         <div>\r\n//           <h2>현재 라운드</h2>\r\n//           <div className=\"match\">\r\n//             {foodLists[0]}\r\n//           </div>\r\n//           <div className=\"match\">\r\n//             {foodLists[1]}\r\n//           </div>\r\n//           <p>사용자 선택: {userSelectedWinner || \"아직 선택하지 않음\"}</p>\r\n//           <button onClick={() => handleSelectWinner([foodLists[0], foodLists[1]])}>다음 라운드</button>\r\n//           <button onClick={() => handleUserSelectWinner(foodLists[0])}>첫 번째 음식 선택</button>\r\n//           <button onClick={() => handleUserSelectWinner(foodLists[1])}>두 번째 음식 선택</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {showWinner && (\r\n//         <div>\r\n//           <h2>최종 결과</h2>\r\n//           <div className=\"match\">\r\n//             {winner}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FoodWorldCup;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// const FoodWorldCup = () => {\r\n//   const [round, setRound] = useState(1);\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\r\n\r\n//   const initializeMatches = () => {\r\n//     const initialMatches = [];\r\n//     for (let i = 0; i < options.length; i += 2) {\r\n//       initialMatches.push([i, i + 1]);\r\n//     }\r\n//     setMatches(initialMatches);\r\n//   };\r\n\r\n//   const startRound = () => {\r\n//     if (round <= 4) {\r\n//       initializeMatches();\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (optionIndex) => {\r\n//     setSelectedOption(optionIndex);\r\n//     setIsNextMatchEnabled(true);\r\n//   };\r\n\r\n//   const handleNextMatch = () => {\r\n//     if (selectedOption !== null) {\r\n//       const updatedMatches = [...matches];\r\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\r\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\r\n//       setMatches(updatedMatches);\r\n//       setSelectedOption(null);\r\n//       setIsNextMatchEnabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleNextRound = () => {\r\n//     if (matches.length === 1) {\r\n//       setRound(round + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"food-world-cup\">\r\n//       {round <= 4 ? (\r\n//         <div>\r\n//           <h2>Round {round}</h2>\r\n//           <div className=\"match\">\r\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\r\n//               <button\r\n//                 key={optionIndex}\r\n//                 onClick={() => handleOptionClick(optionIndex)}\r\n//                 disabled={selectedOption !== null}\r\n//               >\r\n//                 {options[optionIndex]}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\r\n//             Next Match\r\n//           </button>\r\n//           {round < 4 && (\r\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\r\n//               Next Round\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"result\">\r\n//           <h2>Result</h2>\r\n//           <p>You selected: {options[matches[0][0]]}</p>\r\n//         </div>\r\n//       )}\r\n//       {round === 1 && (\r\n//         <button onClick={startRound}>Start currentFoodLists</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FoodWorldCup;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,SAASH,SAAS,CAAC;EACnCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAgBfC,eAAe,GAAIC,IAAI,IAAK;MAC1B,MAAM;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAG,IAAI,CAACC,KAAK;MACnC,MAAMC,YAAY,GAAG,CAAC,GAAGH,KAAK,CAAC;MAC/BG,YAAY,CAACF,KAAK,CAAC,GAAGF,IAAI;MAE1B,IAAI,CAACK,QAAQ,CAAC;QACZJ,KAAK,EAAEG,YAAY;QACnBF,KAAK,EAAEA,KAAK,GAAG;MACjB,CAAC,CAAC;IACJ,CAAC;IAxBC,IAAI,CAACC,KAAK,GAAG;MACXF,KAAK,EAAE,CACL,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,CACR;MACDC,KAAK,EAAE;IACT,CAAC;EACH;EAaAI,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEL,KAAK;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAEnC,IAAID,KAAK,IAAID,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;MAC7B,oBAAOZ,OAAA;QAAAa,QAAA,GAAK,uFAAoB,EAACP,KAAK,CAACC,KAAK,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACtD;IAEA,oBACEjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBjB,OAAA;QAAAa,QAAA,GAAI,qBAAI,EAACN,KAAK,GAAG,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBjB,OAAA;QAAAa,QAAA,EACGP,KAAK,CAACY,KAAK,CAACX,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC,CAACY,GAAG,CAAC,CAACd,IAAI,EAAEe,KAAK,kBAC7CpB,OAAA;UAAgBqB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACjB,eAAe,CAACC,IAAI,CAAE;UAAAQ,QAAA,EACvDR;QAAI,GADEe,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV;AACF;AAEA,eAAehB,YAAY;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}