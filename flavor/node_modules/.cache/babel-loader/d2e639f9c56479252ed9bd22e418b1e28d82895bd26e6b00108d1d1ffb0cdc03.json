{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\RecomRandom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst foodOptions = ['피자', '스테이크', '스시', '파스타', '햄버거', '타코', '샌드위치', '라면', '치킨', '샐러드', '포크립', '짜장면'];\nfunction RecomRandom() {\n  _s();\n  const [selectedFood, setSelectedFood] = useState(null);\n  const spinRoulette = () => {\n    const randomIndex = Math.floor(Math.random() * foodOptions.length);\n    setSelectedFood(foodOptions[randomIndex]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .roulette-container {\n          text-align: center;\n          padding: 20px;\n          border-radius: 10px;\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n          background-color: #f4f4f4;\n          width: 300px;\n          margin: 0 auto;\n        }\n        \n        h1 {\n          color: #333;\n          font-size: 36px;\n          margin-bottom: 20px;\n        }\n        \n        .food-display {\n          font-size: 28px;\n          font-weight: bold;\n          color: #333;\n          margin: 20px 0;\n        }\n        \n        .selected-food {\n          font-weight: bold;\n          color: #ff5733; /* 임의의 색상 지정 */\n        }\n        \n        button {\n          background-color: #007bff; /* 버튼 색상 지정 */\n          color: white;\n          padding: 10px 20px;\n          border: none;\n          border-radius: 5px;\n          font-size: 20px;\n          cursor: pointer;\n          transition: background-color 0.3s;\n        }\n        \n        button:hover {\n          background-color: #0056b3; /* 호버 상태 색상 변경 */\n        }\n        \n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uB79C\\uB364 \\uC74C\\uC2DD \\uCD94\\uCC9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-display\",\n        children: selectedFood ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected-food\",\n          children: selectedFood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uBC84\\uD2BC\\uC744 \\uD074\\uB9AD\\uD574\\uBCF4\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: spinRoulette,\n        children: \"\\uB8F0\\uB81B \\uB3CC\\uB9AC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(RecomRandom, \"Pjl3q4rLsQKfXhgxG9RnB6viVh8=\");\n_c = RecomRandom;\nexport default RecomRandom;\nvar _c;\n$RefreshReg$(_c, \"RecomRandom\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","foodOptions","RecomRandom","_s","selectedFood","setSelectedFood","spinRoulette","randomIndex","Math","floor","random","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/RecomRandom.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst foodOptions = [\r\n  '피자',\r\n  '스테이크',\r\n  '스시',\r\n  '파스타',\r\n  '햄버거',\r\n  '타코',\r\n  '샌드위치',\r\n  '라면',\r\n  '치킨',\r\n  '샐러드',\r\n  '포크립',\r\n  '짜장면',\r\n];\r\n\r\nfunction RecomRandom() {\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n\r\n  const spinRoulette = () => {\r\n    const randomIndex = Math.floor(Math.random() * foodOptions.length);\r\n    setSelectedFood(foodOptions[randomIndex]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <style>\r\n      {`\r\n        .roulette-container {\r\n          text-align: center;\r\n          padding: 20px;\r\n          border-radius: 10px;\r\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n          background-color: #f4f4f4;\r\n          width: 300px;\r\n          margin: 0 auto;\r\n        }\r\n        \r\n        h1 {\r\n          color: #333;\r\n          font-size: 36px;\r\n          margin-bottom: 20px;\r\n        }\r\n        \r\n        .food-display {\r\n          font-size: 28px;\r\n          font-weight: bold;\r\n          color: #333;\r\n          margin: 20px 0;\r\n        }\r\n        \r\n        .selected-food {\r\n          font-weight: bold;\r\n          color: #ff5733; /* 임의의 색상 지정 */\r\n        }\r\n        \r\n        button {\r\n          background-color: #007bff; /* 버튼 색상 지정 */\r\n          color: white;\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 5px;\r\n          font-size: 20px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n        \r\n        button:hover {\r\n          background-color: #0056b3; /* 호버 상태 색상 변경 */\r\n        }\r\n        \r\n      `}\r\n    </style>\r\n    <div className=\"roulette-container\">\r\n      <h1>랜덤 음식 추천</h1>\r\n      <div className=\"food-display\">\r\n        {selectedFood ? (\r\n          <p className=\"selected-food\">{selectedFood}</p>\r\n        ) : (\r\n          <p>버튼을 클릭해보세요</p>\r\n        )}\r\n      </div>\r\n      <button onClick={spinRoulette}>룰렛 돌리기</button>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecomRandom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAG,CAClB,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,KAAK,EACL,KAAK,EACL,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,CACN;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,WAAW,CAACU,MAAM,CAAC;IAClEN,eAAe,CAACJ,WAAW,CAACM,WAAW,CAAC,CAAC;EAC3C,CAAC;EAED,oBACEP,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EACE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACRhB,OAAA;MAAKiB,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACjCZ,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhB,OAAA;QAAKiB,SAAS,EAAC,cAAc;QAAAL,QAAA,EAC1BR,YAAY,gBACXJ,OAAA;UAAGiB,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAER;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAE/ChB,OAAA;UAAAY,QAAA,EAAG;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNhB,OAAA;QAAQkB,OAAO,EAAEZ,YAAa;QAAAM,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACb,EAAA,CAtEQD,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAwEpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}