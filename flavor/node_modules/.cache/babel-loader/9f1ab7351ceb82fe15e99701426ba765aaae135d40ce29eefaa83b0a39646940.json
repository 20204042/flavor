{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    // 게시글 내용을 불러오는 API 요청을 보냅니다.\n    async function fetchPost() {\n      try {\n        const response = await fetch(`http://localhost:3001/post/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          setPost(data);\n        } else {\n          console.error('게시글 데이터 불러오기 오류:', response.statusText);\n        }\n      } catch (error) {\n        console.error('API 요청 오류:', error);\n      }\n    }\n    fetchPost();\n  }, [id]);\n  const handleIncreaseViews = async () => {\n    try {\n      // 서버에 게시글의 조회수를 업데이트하는 API 요청을 보냅니다.\n      const response = await fetch(`http://localhost:3001/increaseViews/${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        // 조회수를 증가시키도록 서버에서 처리한 경우에만 클라이언트에서 업데이트합니다.\n        setPost(prevPost => ({\n          ...prevPost,\n          views: prevPost.views + 1\n        }));\n      } else {\n        console.error('조회수 업데이트 오류:', response.statusText);\n      }\n    } catch (error) {\n      console.error('API 요청 오류:', error);\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .post_detail {\n          text-align: center;\n          padding: 20px;\n        }\n\n        .post_title {\n          font-size: 24px;\n          font-weight: bold;\n        }\n\n        .post_date {\n          font-size: 16px;\n        }\n\n        .post_views {\n          font-size: 16px;\n        }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_date\",\n        children: new Date(post.date).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_views\",\n        onClick: handleIncreaseViews,\n        children: [\"\\uC870\\uD68C\\uC218: \", post.views]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetail, \"6+b5eOm0C2EIwwbuXxVLhmPamew=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","PostDetail","_s","id","post","setPost","fetchPost","response","fetch","ok","data","json","console","error","statusText","handleIncreaseViews","method","headers","prevPost","views","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","Date","date","toLocaleDateString","onClick","content","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/PostDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction PostDetail() {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 게시글 내용을 불러오는 API 요청을 보냅니다.\r\n    async function fetchPost() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/post/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPost(data);\r\n        } else {\r\n          console.error('게시글 데이터 불러오기 오류:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('API 요청 오류:', error);\r\n      }\r\n    }\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  const handleIncreaseViews = async () => {\r\n    try {\r\n      // 서버에 게시글의 조회수를 업데이트하는 API 요청을 보냅니다.\r\n      const response = await fetch(`http://localhost:3001/increaseViews/${id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        // 조회수를 증가시키도록 서버에서 처리한 경우에만 클라이언트에서 업데이트합니다.\r\n        setPost((prevPost) => ({\r\n          ...prevPost,\r\n          views: prevPost.views + 1,\r\n        }));\r\n      } else {\r\n        console.error('조회수 업데이트 오류:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('API 요청 오류:', error);\r\n    }\r\n  };\r\n\r\n  if (!post) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <style>\r\n        {`\r\n        .post_detail {\r\n          text-align: center;\r\n          padding: 20px;\r\n        }\r\n\r\n        .post_title {\r\n          font-size: 24px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .post_date {\r\n          font-size: 16px;\r\n        }\r\n\r\n        .post_views {\r\n          font-size: 16px;\r\n        }\r\n        `}\r\n      </style>\r\n      <div className=\"post_detail\">\r\n        <div className=\"post_title\">{post.title}</div>\r\n        <div className=\"post_date\">{new Date(post.date).toLocaleDateString()}</div>\r\n        <div className=\"post_views\" onClick={handleIncreaseViews}>\r\n          조회수: {post.views}\r\n        </div>\r\n        <p>{post.content}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}