{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\BoardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardList({\n  handlePostClick\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 5;\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await fetch('http://localhost:3001/boardlist');\n        if (response.ok) {\n          const data = await response.json();\n          setPosts(data);\n        } else {\n          console.error('게시물 데이터 불러오기 오류:', response.statusText);\n        }\n      } catch (error) {\n        console.error('API 요청 오류:', error);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const totalPosts = posts.length;\n  const totalPages = Math.ceil(totalPosts / postsPerPage);\n  const indexOfFirstPost = (currentPage - 1) * postsPerPage;\n  const indexOfLastPost = indexOfFirstPost + postsPerPage;\n  const sortedPosts = [...posts].reverse();\n  const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\n  const pageButtons = [];\n  for (let page = 1; page <= totalPages; page++) {\n    pageButtons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentPage(page),\n      disabled: page === currentPage,\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* BoardList.css */\n        .board_container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          text-align: center;\n        }\n        \n        .post-list {\n          list-style: none;\n          padding: 0;\n        }\n        \n        .post-list li {\n          margin-bottom: 10px;\n        }\n        \n        .page-navigation {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          margin-top: 10px; /* 버튼과 게시글 사이의 간격을 조절 */\n        }\n        \n        .nav-button {\n          background-color: #007BFF;\n          color: #fff;\n          border: none;\n          border-radius: 5px;\n          padding: 5px 10px;\n          margin: 0 5px;\n          cursor: pointer;\n          min-width: 40px;\n          height: 30px;\n        }\n        \n        .nav-button:disabled {\n          background-color: #ccc;\n          cursor: not-allowed;\n        }\n        \n        .add-button {\n          background-color: #28A745;\n          color: #fff;\n          border: none;\n          border-radius: 5px;\n          padding: 10px 20px;\n          cursor: pointer;\n          min-width: 40px;\n          height: 30px;\n        }\n        \n        .add-button:hover {\n          background-color: #218838;\n        }        \n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"post-list\",\n        children: currentPosts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/post/${post.id}`,\n            onClick: () => handlePostClick(post.id),\n            children: [\"\\uC21C\\uC11C: \", totalPosts - indexOfFirstPost - index, \" \\uC81C\\uBAA9: \", post.title, \" \\uC791\\uC131\\uC77C: \", post.date, \" \\uC870\\uD68C\\uC218: \", post.views]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(1),\n          disabled: currentPage === 1,\n          className: \"nav-button\",\n          children: \"\\uCC98\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(currentPage - 1),\n          disabled: currentPage === 1,\n          className: \"nav-button\",\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), pageButtons, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(currentPage + 1),\n          disabled: currentPage === totalPages || totalPosts === 0,\n          className: \"nav-button\",\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(totalPages),\n          disabled: currentPage === totalPages || totalPosts === 0,\n          className: \"nav-button\",\n          children: \"\\uB9C8\\uC9C0\\uB9C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/createpostform'),\n        className: \"add-button\",\n        children: \"\\uAC8C\\uC2DC\\uBB3C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardList, \"Q+BHHplCpHrXFLj/uFaX6dx/Ilw=\", false, function () {\n  return [useNavigate];\n});\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","BoardList","handlePostClick","_s","posts","setPosts","currentPage","setCurrentPage","postsPerPage","navigate","fetchPosts","response","fetch","ok","data","json","console","error","statusText","totalPosts","length","totalPages","Math","ceil","indexOfFirstPost","indexOfLastPost","sortedPosts","reverse","currentPosts","slice","pageButtons","page","push","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","index","to","id","title","date","views","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/BoardList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction BoardList({handlePostClick}) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 5;\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/boardlist');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPosts(data);\r\n        } else {\r\n          console.error('게시물 데이터 불러오기 오류:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('API 요청 오류:', error);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const totalPosts = posts.length;\r\n  const totalPages = Math.ceil(totalPosts / postsPerPage);\r\n  const indexOfFirstPost = (currentPage - 1) * postsPerPage;\r\n  const indexOfLastPost = indexOfFirstPost + postsPerPage;\r\n  const sortedPosts = [...posts].reverse();\r\n  const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const pageButtons = [];\r\n  for (let page = 1; page <= totalPages; page++) {\r\n    pageButtons.push(\r\n      <button\r\n        key={page}\r\n        onClick={() => setCurrentPage(page)}\r\n        disabled={page === currentPage}\r\n      >\r\n        {page}\r\n      </button>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <style>\r\n        {`\r\n        /* BoardList.css */\r\n        .board_container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          text-align: center;\r\n        }\r\n        \r\n        .post-list {\r\n          list-style: none;\r\n          padding: 0;\r\n        }\r\n        \r\n        .post-list li {\r\n          margin-bottom: 10px;\r\n        }\r\n        \r\n        .page-navigation {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          margin-top: 10px; /* 버튼과 게시글 사이의 간격을 조절 */\r\n        }\r\n        \r\n        .nav-button {\r\n          background-color: #007BFF;\r\n          color: #fff;\r\n          border: none;\r\n          border-radius: 5px;\r\n          padding: 5px 10px;\r\n          margin: 0 5px;\r\n          cursor: pointer;\r\n          min-width: 40px;\r\n          height: 30px;\r\n        }\r\n        \r\n        .nav-button:disabled {\r\n          background-color: #ccc;\r\n          cursor: not-allowed;\r\n        }\r\n        \r\n        .add-button {\r\n          background-color: #28A745;\r\n          color: #fff;\r\n          border: none;\r\n          border-radius: 5px;\r\n          padding: 10px 20px;\r\n          cursor: pointer;\r\n          min-width: 40px;\r\n          height: 30px;\r\n        }\r\n        \r\n        .add-button:hover {\r\n          background-color: #218838;\r\n        }        \r\n        `}\r\n      </style>\r\n      <div className=\"board_container\">\r\n        <h1>게시판</h1>\r\n        <ul className=\"post-list\">\r\n          {currentPosts.map((post, index) => (\r\n            <li key={post.id}>\r\n              <Link to={`/post/${post.id}`} onClick={() => handlePostClick(post.id)}>\r\n                순서: {totalPosts - indexOfFirstPost - index} 제목: {post.title} 작성일: {post.date} 조회수: {post.views}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"page-navigation\">\r\n          <button onClick={() => setCurrentPage(1)} disabled={currentPage === 1} className=\"nav-button\">처음</button>\r\n          <button onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1} className=\"nav-button\">이전</button>\r\n          {pageButtons}\r\n          <button onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === totalPages || totalPosts === 0} className=\"nav-button\">다음</button>\r\n          <button onClick={() => setCurrentPage(totalPages)} disabled={currentPage === totalPages || totalPosts === 0} className=\"nav-button\">마지막</button>\r\n        </div>\r\n        <br></br>\r\n        <button onClick={() => navigate('/createpostform')} className=\"add-button\">게시물 추가</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}