{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\MyInfoHeart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyInfoHeart = () => {\n  _s();\n  const userid = 'cdflavor1113';\n  const location = useLocation();\n  const {\n    restaurantInfo,\n    isFavorite\n  } = location.state;\n\n  // 'restaurantInfo'가 없거나 'isFavorite'가 없는 경우에 대한 처리\n  if (!restaurantInfo || typeof isFavorite === 'undefined') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uCC1C \\uBAA9\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  fetch('http://localhost:3001/myinfoheart', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userid\n    })\n  }).then(response => response.json()).then(data => {\n    // 받아온 data로 해당 레스토랑의 정보 요청\n    data.forEach(restaurant => {\n      fetch(`http://localhost:3001/mapfoodtype/restaurant/${restaurant.restaurantid}`).then(res => res.json()).then(restaurantInfo => {\n        // 여기서 레스토랑 정보를 활용하여 UI 업데이트 등 수행\n        console.log(restaurantInfo);\n        // UI 업데이트를 수행할 함수 호출 또는 데이터 활용\n      });\n    });\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n\n  // 받은 정보를 이용해서 작업 수행\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uC74C\\uC2DD\\uC810 \\uC774\\uB984: \", restaurantInfo.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uCC1C\\uD55C \\uC0C1\\uD0DC: \", isFavorite ? '찜한 상태' : '찜하지 않은 상태']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MyInfoHeart, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = MyInfoHeart;\nexport default MyInfoHeart;\nvar _c;\n$RefreshReg$(_c, \"MyInfoHeart\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","MyInfoHeart","_s","userid","location","restaurantInfo","isFavorite","state","children","fileName","_jsxFileName","lineNumber","columnNumber","fetch","method","headers","body","JSON","stringify","then","response","json","data","forEach","restaurant","restaurantid","res","console","log","catch","error","title","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/MyInfoHeart.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst MyInfoHeart = () => {\r\n  const userid = 'cdflavor1113';\r\n  const location = useLocation();\r\n  const { restaurantInfo, isFavorite } = location.state;\r\n\r\n  // 'restaurantInfo'가 없거나 'isFavorite'가 없는 경우에 대한 처리\r\n  if (!restaurantInfo || typeof isFavorite === 'undefined') {\r\n    return (\r\n      <div>\r\n        <p>찜 목록이 없습니다.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  fetch('http://localhost:3001/myinfoheart', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({ userid }),\r\n})\r\n  .then((response) => response.json())\r\n  .then((data) => {\r\n    // 받아온 data로 해당 레스토랑의 정보 요청\r\n    data.forEach((restaurant) => {\r\n      fetch(`http://localhost:3001/mapfoodtype/restaurant/${restaurant.restaurantid}`)\r\n        .then((res) => res.json())\r\n        .then((restaurantInfo) => {\r\n          // 여기서 레스토랑 정보를 활용하여 UI 업데이트 등 수행\r\n          console.log(restaurantInfo);\r\n          // UI 업데이트를 수행할 함수 호출 또는 데이터 활용\r\n        });\r\n    });\r\n  })\r\n  .catch((error) => {\r\n    console.error('Error:', error);\r\n  });\r\n\r\n  // 받은 정보를 이용해서 작업 수행\r\n  return (\r\n    <div>\r\n      <h2>음식점 이름: {restaurantInfo.title}</h2>\r\n      <p>찜한 상태: {isFavorite ? '찜한 상태' : '찜하지 않은 상태'}</p>\r\n      {/* 받은 정보를 이용한 다른 작업 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyInfoHeart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAG,cAAc;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,cAAc;IAAEC;EAAW,CAAC,GAAGF,QAAQ,CAACG,KAAK;;EAErD;EACA,IAAI,CAACF,cAAc,IAAI,OAAOC,UAAU,KAAK,WAAW,EAAE;IACxD,oBACEN,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAAQ,QAAA,EAAG;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEV;EAEAC,KAAK,CAAC,mCAAmC,EAAE;IAC3CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEf;IAAO,CAAC;EACjC,CAAC,CAAC,CACCgB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd;IACAA,IAAI,CAACC,OAAO,CAAEC,UAAU,IAAK;MAC3BX,KAAK,CAAE,gDAA+CW,UAAU,CAACC,YAAa,EAAC,CAAC,CAC7EN,IAAI,CAAEO,GAAG,IAAKA,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEd,cAAc,IAAK;QACxB;QACAsB,OAAO,CAACC,GAAG,CAACvB,cAAc,CAAC;QAC3B;MACF,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,CAAC,CACDwB,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC,CAAC,CAAC;;EAEF;EACA,oBACE9B,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAI,mCAAQ,EAACH,cAAc,CAAC0B,KAAK;IAAA;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCZ,OAAA;MAAAQ,QAAA,GAAG,6BAAO,EAACF,UAAU,GAAG,OAAO,GAAG,WAAW;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/C,CAAC;AAEV,CAAC;AAACV,EAAA,CA9CID,WAAW;EAAA,QAEEH,WAAW;AAAA;AAAAkC,EAAA,GAFxB/B,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}