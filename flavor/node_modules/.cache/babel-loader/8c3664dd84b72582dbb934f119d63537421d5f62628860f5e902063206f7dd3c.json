{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\KeywordRecom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeywordRecom = () => {\n  _s();\n  const [selectedSex, setSelectedSex] = useState(null);\n  const [selectedAge, setSelectedAge] = useState(null);\n  const [selectedType, setSelectedType] = useState([]); // 초기값을 빈 배열로 설정\n  const [selectedMood, setSelectedMood] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState(''); // 선택한 키워드를 저장할 상태\n\n  const foodData = [{\n    name: 'B 음식점',\n    keywords: ['한식', '#깨끗한']\n  }, {\n    name: 'C 음식점',\n    keywords: ['일식', '#분위기 좋은']\n  }\n  // 다른 음식들의 데이터\n  ];\n\n  const handleSexClick = sex => {\n    if (selectedSex === sex) {\n      setSelectedSex(null);\n    } else {\n      setSelectedSex(sex);\n    }\n  };\n  const handleAgeClick = age => {\n    if (selectedAge === age) {\n      setSelectedAge(null);\n    } else {\n      setSelectedAge(age);\n    }\n  };\n  const handleTypeClick = type => {\n    // 복사본을 만들어 작업하기\n    const newSelectedType = [...selectedType];\n\n    // 이미 선택된 메뉴이면 선택 해제, 아니면 추가\n    if (newSelectedType.includes(type)) {\n      newSelectedType.splice(newSelectedType.indexOf(type), 1);\n    } else {\n      // 3개까지만 선택 가능하도록\n      if (newSelectedType.length < 3) {\n        newSelectedType.push(type);\n      }\n    }\n    setSelectedType(newSelectedType);\n  };\n  const handleMoodClick = mood => {\n    const newSelectedMood = [...selectedMood];\n    if (newSelectedMood.includes(mood)) {\n      newSelectedMood.splice(newSelectedMood.indexOf(mood), 1);\n    } else {\n      if (newSelectedMood.length < 3) {\n        newSelectedMood.push(mood);\n      }\n    }\n    setSelectedMood(newSelectedMood);\n  };\n  const generateRecommendations = selectedKeywords => {\n    // 선택한 키워드와 음식 데이터를 비교하여 추천 음식을 생성\n    const recommendedFoods = foodData.filter(food => {\n      // 음식의 키워드와 선택한 키워드 간의 유사성 계산\n      const intersection = food.keywords.filter(keyword => selectedKeywords.includes(keyword));\n      return intersection.length > 0;\n    });\n    return recommendedFoods.map(food => food.name);\n  };\n  const handleCompleteClick = () => {\n    const keywords = [selectedSex, selectedAge, ...selectedType, selectedMood].filter(Boolean);\n    if (keywords.length === 0) {\n      setSelectedKeywords('키워드를 입력해주세요!');\n    } else {\n      const recommendedFoods = generateRecommendations(keywords);\n      setSelectedKeywords('선택한 키워드에 해당하는 음식점은 \\'' + recommendedFoods.join(', ') + '\\' 입니다');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh; /* 화면 높이에 따라 가운데 정렬 */\n        }\n      \n        .box {\n          border: 1px solid #ccc; \n          border-radius: 8px; \n          padding: 20px;\n          text-align: center;\n          background-color: #f7f7f7;\n          width: 600px;\n          margin: 0 auto;\n          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        }\n      \n        .keyword_button {\n          background-color: gray; /* 기본 배경색 (클릭되지 않은 상태) */\n          color: white;\n          border: none;\n          border-radius: 5px;\n          padding: 10px 20px;\n          margin: 5px;\n          cursor: pointer;\n        }\n      \n        .keyword_button.active {\n          background-color: black; /* 클릭된 상태의 배경색 */\n        }\n      \n        .submit_button {\n          background-color: #ff6480; /* 기본 배경색 (클릭되지 않은 상태) */\n          color: white;\n          border: none;\n          border-radius: 5px;\n          padding: 10px 20px;\n          margin: 5px;\n          cursor: pointer;\n        }\n        .separator {\n          width: 540px;\n          height: 2px; /* 원하는 높이로 조절하세요 */\n          background-color: #ccc; /* 구분선의 색상을 조절하세요 */\n          margin: 0 10px; /* 구분선과 버튼 사이의 간격을 조절하세요 */\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD0A4\\uC6CC\\uB4DC \\uCD94\\uCC9C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyword_list_sex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedSex === '남자' ? 'active' : ''}`,\n            onClick: () => handleSexClick('남자'),\n            children: \" \\uB0A8\\uC790 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedSex === '여자' ? 'active' : ''}`,\n            onClick: () => handleSexClick('여자'),\n            children: \" \\uC5EC\\uC790 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyword_list_age\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedAge === '10대' ? 'active' : ''}`,\n            onClick: () => handleAgeClick('10대'),\n            children: \" 10\\uB300 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedAge === '20대' ? 'active' : ''}`,\n            onClick: () => handleAgeClick('20대'),\n            children: \" 20\\uB300 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedAge === '30대' ? 'active' : ''}`,\n            onClick: () => handleAgeClick('30대'),\n            children: \" 30\\uB300 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedAge === '40대' ? 'active' : ''}`,\n            onClick: () => handleAgeClick('40대'),\n            children: \" 40\\uB300 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyword_list_type\",\n          children: ['한식', '중식', '일식', '양식', '패스트푸드', '분식'].map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedType.includes(type) ? 'active' : ''}`,\n            onClick: () => handleTypeClick(type),\n            children: [\" \", type, \" \"]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyword_list_mood\",\n          children: ['#분위기 좋은', '#깨끗한', '#저렴한', '#넓은', '#혼밥하기 좋은', '#조용한', '#푸짐한', '#시끌벅적한', '#포장', '#배달'].map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `keyword_button ${selectedMood.includes(mood) ? 'active' : ''}`,\n            onClick: () => handleMoodClick(mood),\n            children: [\" \", mood, \" \"]\n          }, mood, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit_button\",\n            onClick: handleCompleteClick,\n            children: \"\\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 9\n          }, this), selectedKeywords && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedKeywords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordRecom, \"Mve7x5E1DQMaPyaco6+r4vSjEZ4=\");\n_c = KeywordRecom;\nexport default KeywordRecom;\nvar _c;\n$RefreshReg$(_c, \"KeywordRecom\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","KeywordRecom","_s","selectedSex","setSelectedSex","selectedAge","setSelectedAge","selectedType","setSelectedType","selectedMood","setSelectedMood","selectedKeywords","setSelectedKeywords","foodData","name","keywords","handleSexClick","sex","handleAgeClick","age","handleTypeClick","type","newSelectedType","includes","splice","indexOf","length","push","handleMoodClick","mood","newSelectedMood","generateRecommendations","recommendedFoods","filter","food","intersection","keyword","map","handleCompleteClick","Boolean","join","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/KeywordRecom.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nconst KeywordRecom = () => {\r\n  const [selectedSex, setSelectedSex] = useState(null);\r\n  const [selectedAge, setSelectedAge] = useState(null);\r\n  const [selectedType, setSelectedType] = useState([]); // 초기값을 빈 배열로 설정\r\n  const [selectedMood, setSelectedMood] = useState([]);\r\n  const [selectedKeywords, setSelectedKeywords] = useState(''); // 선택한 키워드를 저장할 상태\r\n\r\n  const foodData = [\r\n    { name: 'B 음식점', keywords: ['한식', '#깨끗한'] },\r\n    { name: 'C 음식점', keywords: ['일식', '#분위기 좋은'] },\r\n    // 다른 음식들의 데이터\r\n  ];\r\n  \r\n  const handleSexClick = (sex) => {\r\n    if (selectedSex === sex) {\r\n      setSelectedSex(null);\r\n    } else {\r\n      setSelectedSex(sex);\r\n    }\r\n  };\r\n\r\n  const handleAgeClick = (age) => {\r\n    if (selectedAge === age) {\r\n      setSelectedAge(null);\r\n    } else {\r\n      setSelectedAge(age);\r\n    }\r\n  };\r\n\r\n  const handleTypeClick = (type) => {\r\n    // 복사본을 만들어 작업하기\r\n    const newSelectedType = [...selectedType];\r\n\r\n    // 이미 선택된 메뉴이면 선택 해제, 아니면 추가\r\n    if (newSelectedType.includes(type)) {\r\n      newSelectedType.splice(newSelectedType.indexOf(type), 1);\r\n    } else {\r\n      // 3개까지만 선택 가능하도록\r\n      if (newSelectedType.length < 3) {\r\n        newSelectedType.push(type);\r\n      }\r\n    }\r\n\r\n    setSelectedType(newSelectedType);\r\n  };\r\n\r\n  const handleMoodClick = (mood) => {\r\n    const newSelectedMood = [...selectedMood];\r\n\r\n    if (newSelectedMood.includes(mood)) {\r\n      newSelectedMood.splice(newSelectedMood.indexOf(mood), 1);\r\n    } else {\r\n      if (newSelectedMood.length < 3) {\r\n        newSelectedMood.push(mood);\r\n      }\r\n    }\r\n\r\n    setSelectedMood(newSelectedMood);\r\n  };\r\n\r\n  const generateRecommendations = (selectedKeywords) => {\r\n    // 선택한 키워드와 음식 데이터를 비교하여 추천 음식을 생성\r\n    const recommendedFoods = foodData.filter((food) => {\r\n      // 음식의 키워드와 선택한 키워드 간의 유사성 계산\r\n      const intersection = food.keywords.filter((keyword) => selectedKeywords.includes(keyword));\r\n      return intersection.length > 0;\r\n    });\r\n  \r\n    return recommendedFoods.map((food) => food.name);\r\n  };\r\n\r\n  const handleCompleteClick = () => {\r\n    const keywords = [selectedSex, selectedAge, ...selectedType, selectedMood].filter(Boolean);\r\n    if (keywords.length === 0) {\r\n      setSelectedKeywords('키워드를 입력해주세요!');\r\n    } else {\r\n      const recommendedFoods = generateRecommendations(keywords);\r\n      setSelectedKeywords('선택한 키워드에 해당하는 음식점은 \\'' + recommendedFoods.join(', ') + '\\' 입니다');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <style> \r\n      {`\r\n        .container {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          height: 100vh; /* 화면 높이에 따라 가운데 정렬 */\r\n        }\r\n      \r\n        .box {\r\n          border: 1px solid #ccc; \r\n          border-radius: 8px; \r\n          padding: 20px;\r\n          text-align: center;\r\n          background-color: #f7f7f7;\r\n          width: 600px;\r\n          margin: 0 auto;\r\n          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n        }\r\n      \r\n        .keyword_button {\r\n          background-color: gray; /* 기본 배경색 (클릭되지 않은 상태) */\r\n          color: white;\r\n          border: none;\r\n          border-radius: 5px;\r\n          padding: 10px 20px;\r\n          margin: 5px;\r\n          cursor: pointer;\r\n        }\r\n      \r\n        .keyword_button.active {\r\n          background-color: black; /* 클릭된 상태의 배경색 */\r\n        }\r\n      \r\n        .submit_button {\r\n          background-color: #ff6480; /* 기본 배경색 (클릭되지 않은 상태) */\r\n          color: white;\r\n          border: none;\r\n          border-radius: 5px;\r\n          padding: 10px 20px;\r\n          margin: 5px;\r\n          cursor: pointer;\r\n        }\r\n        .separator {\r\n          width: 540px;\r\n          height: 2px; /* 원하는 높이로 조절하세요 */\r\n          background-color: #ccc; /* 구분선의 색상을 조절하세요 */\r\n          margin: 0 10px; /* 구분선과 버튼 사이의 간격을 조절하세요 */\r\n        }\r\n      `}\r\n      </style>\r\n      <div className=\"container\">\r\n      <div className=\"box\">\r\n      <h2>키워드 추천</h2>\r\n      <div className=\"keyword_list_sex\">\r\n        <button className={`keyword_button ${selectedSex === '남자' ? 'active' : ''}`}\r\n          onClick={() => handleSexClick('남자')}> 남자 </button>\r\n        <button className={`keyword_button ${selectedSex === '여자' ? 'active' : ''}`}\r\n          onClick={() => handleSexClick('여자')}> 여자 </button>\r\n      </div>\r\n      <div className=\"separator\"></div>\r\n      <div className=\"keyword_list_age\">\r\n        <button className={`keyword_button ${selectedAge === '10대' ? 'active' : ''}`}\r\n          onClick={() => handleAgeClick('10대')}> 10대 </button>\r\n        <button className={`keyword_button ${selectedAge === '20대' ? 'active' : ''}`}\r\n          onClick={() => handleAgeClick('20대')}> 20대 </button>\r\n        <button className={`keyword_button ${selectedAge === '30대' ? 'active' : ''}`}\r\n          onClick={() => handleAgeClick('30대')}> 30대 </button>\r\n        <button className={`keyword_button ${selectedAge === '40대' ? 'active' : ''}`}\r\n          onClick={() => handleAgeClick('40대')}> 40대 </button>\r\n      </div>\r\n      <div className=\"separator\"></div>\r\n      <div className=\"keyword_list_type\">\r\n        {['한식', '중식', '일식', '양식', '패스트푸드', '분식'].map((type) => (\r\n          <button key={type} className={`keyword_button ${selectedType.includes(type) ? 'active' : ''}`}\r\n            onClick={() => handleTypeClick(type)}> {type} </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"separator\"></div>\r\n      <div className=\"keyword_list_mood\">\r\n        {['#분위기 좋은', '#깨끗한', '#저렴한', '#넓은', '#혼밥하기 좋은', '#조용한', '#푸짐한', '#시끌벅적한', '#포장', '#배달'].map((mood) => (\r\n          <button key={mood} className={`keyword_button ${selectedMood.includes(mood) ? 'active' : ''}`}\r\n            onClick={() => handleMoodClick(mood)}> {mood} </button>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <button className=\"submit_button\" onClick={handleCompleteClick}>완료</button>\r\n        {selectedKeywords && <p>{selectedKeywords}</p>}\r\n      </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default KeywordRecom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}