{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\FoodWorldCup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initFoodList = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\nfunction FoodWorldCup() {\n  _s();\n  const [round, setRound] = useState(0); // 현재 라운드 번호\n  const [matchup, setMatchup] = useState([]); // 현재 라운드의 경기 배열\n  const [selectedFoods, setSelectedFoods] = useState([]); // 선택된 음식들의 배열\n\n  useEffect(() => {\n    // 초기 라운드 설정\n    const initialMatchup = divideIntoPairs(initFoodList);\n    setMatchup(initialMatchup);\n  }, []);\n\n  // 배열을 2개씩 나누는 함수\n  function divideIntoPairs(arr) {\n    const pairs = [];\n    for (let i = 0; i < arr.length; i += 2) {\n      pairs.push([arr[i], arr[i + 1]]);\n    }\n    return pairs;\n  }\n\n  // 다음 라운드로 진행하는 함수\n  function nextRound() {\n    if (round < Math.log2(initFoodList.length)) {\n      const winners = selectedFoods.slice();\n      setMatchup(divideIntoPairs(winners));\n      setSelectedFoods([]);\n      setRound(round + 1);\n    }\n  }\n\n  // 음식 선택 함수\n  function selectFood(winner) {\n    setSelectedFoods([...selectedFoods, winner]);\n    if (selectedFoods.length === Math.pow(2, round)) {\n      nextRound();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC74C\\uC2DD \\uC6D4\\uB4DC\\uCEF5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC7AC \\uB77C\\uC6B4\\uB4DC: \", round + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), matchup.map((pair, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectFood(pair[0]),\n        children: pair[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" vs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectFood(pair[1]),\n        children: pair[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodWorldCup, \"lnitAqXzIOm5vkHdyW5yeH8DHOY=\");\n_c = FoodWorldCup;\nexport default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// const FoodWorldCup = () => {\n//   const [round, setRound] = useState(1);\n//   const [matches, setMatches] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(null);\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\n\n//   const initializeMatches = () => {\n//     const initialMatches = [];\n//     for (let i = 0; i < options.length; i += 2) {\n//       initialMatches.push([i, i + 1]);\n//     }\n//     setMatches(initialMatches);\n//   };\n\n//   const startRound = () => {\n//     if (round <= 4) {\n//       initializeMatches();\n//     }\n//   };\n\n//   const handleOptionClick = (optionIndex) => {\n//     setSelectedOption(optionIndex);\n//     setIsNextMatchEnabled(true);\n//   };\n\n//   const handleNextMatch = () => {\n//     if (selectedOption !== null) {\n//       const updatedMatches = [...matches];\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\n//       setMatches(updatedMatches);\n//       setSelectedOption(null);\n//       setIsNextMatchEnabled(false);\n//     }\n//   };\n\n//   const handleNextRound = () => {\n//     if (matches.length === 1) {\n//       setRound(round + 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"food-world-cup\">\n//       {round <= 4 ? (\n//         <div>\n//           <h2>Round {round}</h2>\n//           <div className=\"match\">\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\n//               <button\n//                 key={optionIndex}\n//                 onClick={() => handleOptionClick(optionIndex)}\n//                 disabled={selectedOption !== null}\n//               >\n//                 {options[optionIndex]}\n//               </button>\n//             ))}\n//           </div>\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\n//             Next Match\n//           </button>\n//           {round < 4 && (\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\n//               Next Round\n//             </button>\n//           )}\n//         </div>\n//       ) : (\n//         <div className=\"result\">\n//           <h2>Result</h2>\n//           <p>You selected: {options[matches[0][0]]}</p>\n//         </div>\n//       )}\n//       {round === 1 && (\n//         <button onClick={startRound}>Start Tournament</button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FoodWorldCup;\nvar _c;\n$RefreshReg$(_c, \"FoodWorldCup\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initFoodList","FoodWorldCup","_s","round","setRound","matchup","setMatchup","selectedFoods","setSelectedFoods","initialMatchup","divideIntoPairs","arr","pairs","i","length","push","nextRound","Math","log2","winners","slice","selectFood","winner","pow","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pair","index","onClick","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/FoodWorldCup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst initFoodList = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\nfunction FoodWorldCup() {\r\n  const [round, setRound] = useState(0); // 현재 라운드 번호\r\n  const [matchup, setMatchup] = useState([]); // 현재 라운드의 경기 배열\r\n  const [selectedFoods, setSelectedFoods] = useState([]); // 선택된 음식들의 배열\r\n\r\n  useEffect(() => {\r\n    // 초기 라운드 설정\r\n    const initialMatchup = divideIntoPairs(initFoodList);\r\n    setMatchup(initialMatchup);\r\n  }, []);\r\n\r\n  // 배열을 2개씩 나누는 함수\r\n  function divideIntoPairs(arr) {\r\n    const pairs = [];\r\n    for (let i = 0; i < arr.length; i += 2) {\r\n      pairs.push([arr[i], arr[i + 1]]);\r\n    }\r\n    return pairs;\r\n  }\r\n\r\n  // 다음 라운드로 진행하는 함수\r\n  function nextRound() {\r\n    if (round < Math.log2(initFoodList.length)) {\r\n      const winners = selectedFoods.slice();\r\n      setMatchup(divideIntoPairs(winners));\r\n      setSelectedFoods([]);\r\n      setRound(round + 1);\r\n    }\r\n  }\r\n\r\n  // 음식 선택 함수\r\n  function selectFood(winner) {\r\n    setSelectedFoods([...selectedFoods, winner]);\r\n    if (selectedFoods.length === Math.pow(2, round)) {\r\n      nextRound();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>음식 월드컵</h1>\r\n      <p>현재 라운드: {round + 1}</p>\r\n      {matchup.map((pair, index) => (\r\n        <div key={index}>\r\n          <button onClick={() => selectFood(pair[0])}>{pair[0]}</button>\r\n          <span> vs </span>\r\n          <button onClick={() => selectFood(pair[1])}>{pair[1]}</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodWorldCup;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// const FoodWorldCup = () => {\r\n//   const [round, setRound] = useState(1);\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\r\n\r\n//   const initializeMatches = () => {\r\n//     const initialMatches = [];\r\n//     for (let i = 0; i < options.length; i += 2) {\r\n//       initialMatches.push([i, i + 1]);\r\n//     }\r\n//     setMatches(initialMatches);\r\n//   };\r\n\r\n//   const startRound = () => {\r\n//     if (round <= 4) {\r\n//       initializeMatches();\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (optionIndex) => {\r\n//     setSelectedOption(optionIndex);\r\n//     setIsNextMatchEnabled(true);\r\n//   };\r\n\r\n//   const handleNextMatch = () => {\r\n//     if (selectedOption !== null) {\r\n//       const updatedMatches = [...matches];\r\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\r\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\r\n//       setMatches(updatedMatches);\r\n//       setSelectedOption(null);\r\n//       setIsNextMatchEnabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleNextRound = () => {\r\n//     if (matches.length === 1) {\r\n//       setRound(round + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"food-world-cup\">\r\n//       {round <= 4 ? (\r\n//         <div>\r\n//           <h2>Round {round}</h2>\r\n//           <div className=\"match\">\r\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\r\n//               <button\r\n//                 key={optionIndex}\r\n//                 onClick={() => handleOptionClick(optionIndex)}\r\n//                 disabled={selectedOption !== null}\r\n//               >\r\n//                 {options[optionIndex]}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\r\n//             Next Match\r\n//           </button>\r\n//           {round < 4 && (\r\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\r\n//               Next Round\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"result\">\r\n//           <h2>Result</h2>\r\n//           <p>You selected: {options[matches[0][0]]}</p>\r\n//         </div>\r\n//       )}\r\n//       {round === 1 && (\r\n//         <button onClick={startRound}>Start Tournament</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FoodWorldCup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AAE1E,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,cAAc,GAAGC,eAAe,CAACV,YAAY,CAAC;IACpDM,UAAU,CAACG,cAAc,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,SAASC,eAAeA,CAACC,GAAG,EAAE;IAC5B,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACtCD,KAAK,CAACG,IAAI,CAAC,CAACJ,GAAG,CAACE,CAAC,CAAC,EAAEF,GAAG,CAACE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClC;IACA,OAAOD,KAAK;EACd;;EAEA;EACA,SAASI,SAASA,CAAA,EAAG;IACnB,IAAIb,KAAK,GAAGc,IAAI,CAACC,IAAI,CAAClB,YAAY,CAACc,MAAM,CAAC,EAAE;MAC1C,MAAMK,OAAO,GAAGZ,aAAa,CAACa,KAAK,CAAC,CAAC;MACrCd,UAAU,CAACI,eAAe,CAACS,OAAO,CAAC,CAAC;MACpCX,gBAAgB,CAAC,EAAE,CAAC;MACpBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;EACF;;EAEA;EACA,SAASkB,UAAUA,CAACC,MAAM,EAAE;IAC1Bd,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEe,MAAM,CAAC,CAAC;IAC5C,IAAIf,aAAa,CAACO,MAAM,KAAKG,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEpB,KAAK,CAAC,EAAE;MAC/Ca,SAAS,CAAC,CAAC;IACb;EACF;EAEA,oBACEjB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACf7B,OAAA;MAAAyB,QAAA,GAAG,mCAAQ,EAACrB,KAAK,GAAG,CAAC;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBvB,OAAO,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBhC,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAQiC,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAACS,IAAI,CAAC,CAAC,CAAC,CAAE;QAAAN,QAAA,EAAEM,IAAI,CAAC,CAAC;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC9D7B,OAAA;QAAAyB,QAAA,EAAM;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjB7B,OAAA;QAAQiC,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAACS,IAAI,CAAC,CAAC,CAAC,CAAE;QAAAN,QAAA,EAAEM,IAAI,CAAC,CAAC;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA,GAHtDG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CAnDQD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAqDrB,eAAeA,YAAY;;AAE3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}