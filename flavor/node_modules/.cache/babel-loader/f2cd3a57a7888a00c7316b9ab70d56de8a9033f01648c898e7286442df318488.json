{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\BoardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardList({\n  handlePostClick\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 5;\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await fetch('http://localhost:3001/boardlist');\n        if (response.ok) {\n          const data = await response.json();\n          setPosts(data);\n        } else {\n          console.error('게시물 데이터 불러오기 오류:', response.statusText);\n        }\n      } catch (error) {\n        console.error('API 요청 오류:', error);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const totalPosts = posts.length;\n  const totalPages = Math.ceil(totalPosts / postsPerPage);\n  const indexOfFirstPost = (currentPage - 1) * postsPerPage;\n  const indexOfLastPost = indexOfFirstPost + postsPerPage;\n\n  // const sortedPosts = posts.slice().reverse();\n  const sortedPosts = [...posts].reverse();\n  const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\n  const pageButtons = [];\n  for (let page = 1; page <= totalPages; page++) {\n    pageButtons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentPage(page),\n      disabled: page === currentPage,\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"post-list\",\n      children: currentPosts.map((post, index) =>\n      /*#__PURE__*/\n      //posts? currentPosts?\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/post/${post.id}`,\n          onClick: () => handlePostClick(post.id),\n          children: [\"\\uC21C\\uC11C: \", totalPosts - indexOfFirstPost - index, \" \\uC81C\\uBAA9: \", post.title, \" \\uC791\\uC131\\uC77C: \", post.date, \" \\uC870\\uD68C\\uC218: \", post.views]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        disabled: currentPage === 1,\n        children: \"\\uCC98\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), pageButtons, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage + 1),\n        disabled: currentPage === totalPages || totalPosts === 0,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(totalPages),\n        disabled: currentPage === totalPages || totalPosts === 0,\n        children: \"\\uB9C8\\uC9C0\\uB9C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/createpostform'),\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardList, \"Q+BHHplCpHrXFLj/uFaX6dx/Ilw=\", false, function () {\n  return [useNavigate];\n});\n_c = BoardList;\nexport default BoardList;\n\n// 원래 되던 코드\n/////////////////////////////////////////////////////////////\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n\n// function BoardList({ posts, handlePostClick }) {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const postsPerPage = 5;\n//   const navigate = useNavigate();\n\n//   const totalPosts = posts.length;\n//   const totalPages = Math.ceil(totalPosts / postsPerPage);\n\n//   const indexOfFirstPost = (currentPage - 1) * postsPerPage;\n//   const indexOfLastPost = indexOfFirstPost + postsPerPage;\n\n//   const sortedPosts = posts.slice().reverse();\n\n//   const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\n\n//   const pageButtons = [];\n//   for (let page = 1; page <= totalPages; page++) {\n//     pageButtons.push(\n//       <button\n//         key={page}\n//         onClick={() => setCurrentPage(page)}\n//       >\n//         {page}\n//       </button>\n//       );\n//   }\n\n//   return (\n//     <div className=\"board-container\">\n//       <h1>게시판</h1>\n//       <ul className=\"post-list\">\n//         {currentPosts.map((post, index) => (\n//           <li key={post.id}>\n//             <Link to={`/post/${post.id}`} onClick={() => handlePostClick(post.id)}>\n//               순서: {totalPosts - indexOfFirstPost - index} 제목: {post.title} 작성일: {post.date} 조회수: {post.views}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//       <div className=\"page-navigation\">\n//         <button\n//           onClick={() => setCurrentPage(1)}\n//           disabled={currentPage === 1}\n//         >\n//           처음\n//         </button>\n//         <button\n//           onClick={() => setCurrentPage(currentPage - 1)}\n//           disabled={currentPage === 1}\n//         >\n//           이전\n//         </button>\n//         {pageButtons}\n//         <button\n//           onClick={() => setCurrentPage(currentPage + 1)}\n//           disabled={currentPage === totalPages || totalPosts === 0}\n//         >\n//           다음\n//         </button>\n//         <button\n//           onClick={() => setCurrentPage(totalPages)}\n//           disabled={currentPage === totalPages || totalPosts === 0}\n//         >\n//           마지막\n//         </button>\n//       </div>\n//       <br></br>\n//       <button onClick={() => navigate('/createpostform')}>게시물 추가</button>\n//     </div>\n//   );\n// }\n\n// export default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","BoardList","handlePostClick","_s","posts","setPosts","currentPage","setCurrentPage","postsPerPage","navigate","fetchPosts","response","fetch","ok","data","json","console","error","statusText","totalPosts","length","totalPages","Math","ceil","indexOfFirstPost","indexOfLastPost","sortedPosts","reverse","currentPosts","slice","pageButtons","page","push","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","index","to","id","title","date","views","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/BoardList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nfunction BoardList({handlePostClick}) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 5;\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/boardlist');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPosts(data);\r\n        } else {\r\n          console.error('게시물 데이터 불러오기 오류:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('API 요청 오류:', error);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n\r\n  const totalPosts = posts.length;\r\n  const totalPages = Math.ceil(totalPosts / postsPerPage);\r\n\r\n  const indexOfFirstPost = (currentPage - 1) * postsPerPage;\r\n  const indexOfLastPost = indexOfFirstPost + postsPerPage;\r\n\r\n  // const sortedPosts = posts.slice().reverse();\r\n  const sortedPosts = [...posts].reverse();\r\n\r\n  const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const pageButtons = [];\r\n  for (let page = 1; page <= totalPages; page++) {\r\n    pageButtons.push(\r\n      <button\r\n        key={page}\r\n        onClick={() => setCurrentPage(page)}\r\n        disabled={page === currentPage}\r\n      >\r\n        {page}\r\n      </button>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"board-container\">\r\n      <h1>게시판</h1>\r\n      <ul className=\"post-list\">\r\n        {currentPosts.map((post, index) => ( //posts? currentPosts?\r\n          <li key={post.id}>\r\n            <Link to={`/post/${post.id}`} onClick={() => handlePostClick(post.id)}>\r\n              순서: {totalPosts - indexOfFirstPost - index} 제목: {post.title} 작성일: {post.date} 조회수: {post.views}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"page-navigation\">\r\n        <button\r\n          onClick={() => setCurrentPage(1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          처음\r\n        </button>\r\n        <button\r\n          onClick={() => setCurrentPage(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          이전\r\n        </button>\r\n        {pageButtons}\r\n        <button\r\n          onClick={() => setCurrentPage(currentPage + 1)}\r\n          disabled={currentPage === totalPages || totalPosts === 0}\r\n        >\r\n          다음\r\n        </button>\r\n        <button\r\n          onClick={() => setCurrentPage(totalPages)}\r\n          disabled={currentPage === totalPages || totalPosts === 0}\r\n        >\r\n          마지막\r\n        </button>\r\n      </div>\r\n      <br></br>\r\n      <button onClick={() => navigate('/createpostform')}>게시물 추가</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardList;\r\n\r\n\r\n// 원래 되던 코드\r\n/////////////////////////////////////////////////////////////\r\n// import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function BoardList({ posts, handlePostClick }) {\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const postsPerPage = 5;\r\n//   const navigate = useNavigate();\r\n\r\n//   const totalPosts = posts.length;\r\n//   const totalPages = Math.ceil(totalPosts / postsPerPage);\r\n\r\n//   const indexOfFirstPost = (currentPage - 1) * postsPerPage;\r\n//   const indexOfLastPost = indexOfFirstPost + postsPerPage;\r\n\r\n//   const sortedPosts = posts.slice().reverse();\r\n\r\n//   const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n//   const pageButtons = [];\r\n//   for (let page = 1; page <= totalPages; page++) {\r\n//     pageButtons.push(\r\n//       <button\r\n//         key={page}\r\n//         onClick={() => setCurrentPage(page)}\r\n//       >\r\n//         {page}\r\n//       </button>\r\n//       );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"board-container\">\r\n//       <h1>게시판</h1>\r\n//       <ul className=\"post-list\">\r\n//         {currentPosts.map((post, index) => (\r\n//           <li key={post.id}>\r\n//             <Link to={`/post/${post.id}`} onClick={() => handlePostClick(post.id)}>\r\n//               순서: {totalPosts - indexOfFirstPost - index} 제목: {post.title} 작성일: {post.date} 조회수: {post.views}\r\n//             </Link>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <div className=\"page-navigation\">\r\n//         <button\r\n//           onClick={() => setCurrentPage(1)}\r\n//           disabled={currentPage === 1}\r\n//         >\r\n//           처음\r\n//         </button>\r\n//         <button\r\n//           onClick={() => setCurrentPage(currentPage - 1)}\r\n//           disabled={currentPage === 1}\r\n//         >\r\n//           이전\r\n//         </button>\r\n//         {pageButtons}\r\n//         <button\r\n//           onClick={() => setCurrentPage(currentPage + 1)}\r\n//           disabled={currentPage === totalPages || totalPosts === 0}\r\n//         >\r\n//           다음\r\n//         </button>\r\n//         <button\r\n//           onClick={() => setCurrentPage(totalPages)}\r\n//           disabled={currentPage === totalPages || totalPosts === 0}\r\n//         >\r\n//           마지막\r\n//         </button>\r\n//       </div>\r\n//       <br></br>\r\n//       <button onClick={() => navigate('/createpostform')}>게시물 추가</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default BoardList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}