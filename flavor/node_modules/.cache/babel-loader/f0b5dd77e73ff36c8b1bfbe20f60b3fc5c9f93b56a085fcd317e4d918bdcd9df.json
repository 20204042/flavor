{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\FoodWorldCup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Fisher-Yates shuffle algorithm to shuffle an array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n}\nfunction FoodWorldCup() {\n  _s();\n  // 초기 음식 배열을 무작위로 섞어줍니다.\n  const foodLists = shuffleArray(['Pizza', 'Burger', 'Sushi', 'Taco', 'Pasta', 'Salad', 'Steak', 'Ice Cream']);\n  const [currentFoodLists, setcurrentFoodLists] = useState([{\n    foods: foodLists\n  }]);\n  const [showWinner, setShowWinner] = useState(false);\n  const [winner, setWinner] = useState('');\n  const handleSelectWinner = winners => {\n    if (winners.length === 1) {\n      setWinner(winners[0]);\n      setShowWinner(true);\n    } else {\n      const shuffledWinners = shuffleArray(winners);\n      const nextRound = [];\n      for (let i = 0; i < shuffledWinners.length; i += 2) {\n        nextRound.push(shuffledWinners[i]);\n      }\n      if (nextRound.length === 1) {\n        setWinner(nextRound[0]);\n        setShowWinner(true);\n      }\n      setcurrentFoodLists([...currentFoodLists, {\n        foods: nextRound\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" \\uC74C\\uC2DD \\uC6D4\\uB4DC\\uCEF5 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), currentFoodLists.map((round, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [index + 1, \"\\uB77C\\uC6B4\\uB4DC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), round.foods.map((food, foodIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match\",\n        children: food\n      }, foodIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)), round.foods.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectWinner(round.foods),\n        children: round.foods.length > 2 ? 'Next Round' : 'Winner'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), showWinner && !currentFoodLists[currentFoodLists.length - 1].foods.includes(winner) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCD5C\\uC885 \\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match\",\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodWorldCup, \"+wCe3xHM/41RmkyM+NTmutDn/4E=\");\n_c = FoodWorldCup;\nexport default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// const FoodWorldCup = () => {\n//   const [round, setRound] = useState(1);\n//   const [matches, setMatches] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(null);\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\n\n//   const initializeMatches = () => {\n//     const initialMatches = [];\n//     for (let i = 0; i < options.length; i += 2) {\n//       initialMatches.push([i, i + 1]);\n//     }\n//     setMatches(initialMatches);\n//   };\n\n//   const startRound = () => {\n//     if (round <= 4) {\n//       initializeMatches();\n//     }\n//   };\n\n//   const handleOptionClick = (optionIndex) => {\n//     setSelectedOption(optionIndex);\n//     setIsNextMatchEnabled(true);\n//   };\n\n//   const handleNextMatch = () => {\n//     if (selectedOption !== null) {\n//       const updatedMatches = [...matches];\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\n//       setMatches(updatedMatches);\n//       setSelectedOption(null);\n//       setIsNextMatchEnabled(false);\n//     }\n//   };\n\n//   const handleNextRound = () => {\n//     if (matches.length === 1) {\n//       setRound(round + 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"food-world-cup\">\n//       {round <= 4 ? (\n//         <div>\n//           <h2>Round {round}</h2>\n//           <div className=\"match\">\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\n//               <button\n//                 key={optionIndex}\n//                 onClick={() => handleOptionClick(optionIndex)}\n//                 disabled={selectedOption !== null}\n//               >\n//                 {options[optionIndex]}\n//               </button>\n//             ))}\n//           </div>\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\n//             Next Match\n//           </button>\n//           {round < 4 && (\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\n//               Next Round\n//             </button>\n//           )}\n//         </div>\n//       ) : (\n//         <div className=\"result\">\n//           <h2>Result</h2>\n//           <p>You selected: {options[matches[0][0]]}</p>\n//         </div>\n//       )}\n//       {round === 1 && (\n//         <button onClick={startRound}>Start currentFoodLists</button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FoodWorldCup;\nvar _c;\n$RefreshReg$(_c, \"FoodWorldCup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","FoodWorldCup","_s","foodLists","currentFoodLists","setcurrentFoodLists","foods","showWinner","setShowWinner","winner","setWinner","handleSelectWinner","winners","shuffledWinners","nextRound","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","round","index","food","foodIndex","onClick","includes","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/FoodWorldCup.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Fisher-Yates shuffle algorithm to shuffle an array\r\nfunction shuffleArray(array) {\r\n  const shuffledArray = [...array];\r\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n  }\r\n  return shuffledArray;\r\n}\r\n\r\nfunction FoodWorldCup() {\r\n  // 초기 음식 배열을 무작위로 섞어줍니다.\r\n  const foodLists = shuffleArray(['Pizza', 'Burger', 'Sushi', 'Taco', 'Pasta', 'Salad', 'Steak', 'Ice Cream']);\r\n\r\n  const [currentFoodLists, setcurrentFoodLists] = useState([{ foods: foodLists }]);\r\n  const [showWinner, setShowWinner] = useState(false);\r\n  const [winner, setWinner] = useState('');\r\n\r\n  const handleSelectWinner = (winners) => {\r\n    if (winners.length === 1) {\r\n      setWinner(winners[0]);\r\n      setShowWinner(true);\r\n    } else {\r\n      const shuffledWinners = shuffleArray(winners);\r\n      const nextRound = [];\r\n      for (let i = 0; i < shuffledWinners.length; i += 2) {\r\n        nextRound.push(shuffledWinners[i]);\r\n      }\r\n      if (nextRound.length === 1) {\r\n        setWinner(nextRound[0]);\r\n        setShowWinner(true);\r\n      }\r\n      setcurrentFoodLists([...currentFoodLists, { foods: nextRound }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1> 음식 월드컵 </h1>\r\n      {currentFoodLists.map((round, index) => (\r\n        <div key={index}>\r\n          <h2>{index + 1}라운드</h2>\r\n          {round.foods.map((food, foodIndex) => (\r\n            <div key={foodIndex} className=\"match\">\r\n              {food}\r\n            </div>\r\n          ))}\r\n          {round.foods.length > 1 && (\r\n            <button onClick={() => handleSelectWinner(round.foods)}>\r\n              {round.foods.length > 2 ? 'Next Round' : 'Winner'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      {showWinner && !currentFoodLists[currentFoodLists.length - 1].foods.includes(winner) && (\r\n        <div>\r\n          <h2>최종 결과</h2>\r\n          <div className=\"match\">\r\n            {winner}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodWorldCup;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// const FoodWorldCup = () => {\r\n//   const [round, setRound] = useState(1);\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\r\n\r\n//   const initializeMatches = () => {\r\n//     const initialMatches = [];\r\n//     for (let i = 0; i < options.length; i += 2) {\r\n//       initialMatches.push([i, i + 1]);\r\n//     }\r\n//     setMatches(initialMatches);\r\n//   };\r\n\r\n//   const startRound = () => {\r\n//     if (round <= 4) {\r\n//       initializeMatches();\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (optionIndex) => {\r\n//     setSelectedOption(optionIndex);\r\n//     setIsNextMatchEnabled(true);\r\n//   };\r\n\r\n//   const handleNextMatch = () => {\r\n//     if (selectedOption !== null) {\r\n//       const updatedMatches = [...matches];\r\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\r\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\r\n//       setMatches(updatedMatches);\r\n//       setSelectedOption(null);\r\n//       setIsNextMatchEnabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleNextRound = () => {\r\n//     if (matches.length === 1) {\r\n//       setRound(round + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"food-world-cup\">\r\n//       {round <= 4 ? (\r\n//         <div>\r\n//           <h2>Round {round}</h2>\r\n//           <div className=\"match\">\r\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\r\n//               <button\r\n//                 key={optionIndex}\r\n//                 onClick={() => handleOptionClick(optionIndex)}\r\n//                 disabled={selectedOption !== null}\r\n//               >\r\n//                 {options[optionIndex]}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\r\n//             Next Match\r\n//           </button>\r\n//           {round < 4 && (\r\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\r\n//               Next Round\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"result\">\r\n//           <h2>Result</h2>\r\n//           <p>You selected: {options[matches[0][0]]}</p>\r\n//         </div>\r\n//       )}\r\n//       {round === 1 && (\r\n//         <button onClick={startRound}>Start currentFoodLists</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FoodWorldCup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}