{"ast":null,"code":"var _jsxFileName = \"C:\\\\CD_REACT\\\\flavor\\\\flavor\\\\src\\\\FoodWorldCup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\nfunction shuffleArray(array) {\n  // 배열을 섞기 위한 Fisher-Yates 알고리즘\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n}\nfunction splitArray(array, chunkSize) {\n  const chunkedArray = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    chunkedArray.push(array.slice(i, i + chunkSize));\n  }\n  return chunkedArray;\n}\nconst FoodWorldCup = () => {\n  _s();\n  const [round, setRound] = useState(1);\n  const shuffledOptions = shuffleArray(options);\n  const teams = splitArray(shuffledOptions, 2);\n  const [matches, setMatches] = useState(teams);\n  function handleMatchWinner(winner) {\n    const updatedMatches = matches.map((match, index) => {\n      if (index === round - 1) {\n        return [...match, winner];\n      }\n      return match;\n    });\n    setMatches(updatedMatches);\n    if (updatedMatches.length === 1) {\n      // 토너먼트 종료\n      console.log(\"토너먼트 종료. 최종 승자: \", updatedMatches[0][2]);\n    } else {\n      setRound(round + 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uD1A0\\uB108\\uBA3C\\uD2B8 \\uB77C\\uC6B4\\uB4DC \", round]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), matches.map((match, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [match[0], \" vs. \", match[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), match.length === 2 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMatchWinner(match[0]),\n        children: [\"\\uC2B9\\uC790: \", match[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2B9\\uC790: \", match[2]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodWorldCup, \"cy6N56o7oNh0IvGvC7UX0323Bf0=\");\n_c = FoodWorldCup;\nexport default FoodWorldCup;\n\n// import React, { useState } from 'react';\n\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\n\n// const FoodWorldCup = () => {\n//   const [round, setRound] = useState(1);\n//   const [matches, setMatches] = useState([]);\n//   const [selectedOption, setSelectedOption] = useState(null);\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\n\n//   const initializeMatches = () => {\n//     const initialMatches = [];\n//     for (let i = 0; i < options.length; i += 2) {\n//       initialMatches.push([i, i + 1]);\n//     }\n//     setMatches(initialMatches);\n//   };\n\n//   const startRound = () => {\n//     if (round <= 4) {\n//       initializeMatches();\n//     }\n//   };\n\n//   const handleOptionClick = (optionIndex) => {\n//     setSelectedOption(optionIndex);\n//     setIsNextMatchEnabled(true);\n//   };\n\n//   const handleNextMatch = () => {\n//     if (selectedOption !== null) {\n//       const updatedMatches = [...matches];\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\n//       setMatches(updatedMatches);\n//       setSelectedOption(null);\n//       setIsNextMatchEnabled(false);\n//     }\n//   };\n\n//   const handleNextRound = () => {\n//     if (matches.length === 1) {\n//       setRound(round + 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"food-world-cup\">\n//       {round <= 4 ? (\n//         <div>\n//           <h2>Round {round}</h2>\n//           <div className=\"match\">\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\n//               <button\n//                 key={optionIndex}\n//                 onClick={() => handleOptionClick(optionIndex)}\n//                 disabled={selectedOption !== null}\n//               >\n//                 {options[optionIndex]}\n//               </button>\n//             ))}\n//           </div>\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\n//             Next Match\n//           </button>\n//           {round < 4 && (\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\n//               Next Round\n//             </button>\n//           )}\n//         </div>\n//       ) : (\n//         <div className=\"result\">\n//           <h2>Result</h2>\n//           <p>You selected: {options[matches[0][0]]}</p>\n//         </div>\n//       )}\n//       {round === 1 && (\n//         <button onClick={startRound}>Start Tournament</button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FoodWorldCup;\nvar _c;\n$RefreshReg$(_c, \"FoodWorldCup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","options","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","splitArray","chunkSize","chunkedArray","push","slice","FoodWorldCup","_s","round","setRound","shuffledOptions","teams","matches","setMatches","handleMatchWinner","winner","updatedMatches","map","match","index","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/CD_REACT/flavor/flavor/src/FoodWorldCup.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\nfunction shuffleArray(array) {\r\n  // 배열을 섞기 위한 Fisher-Yates 알고리즘\r\n  const shuffledArray = [...array];\r\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n  }\r\n  return shuffledArray;\r\n}\r\n\r\nfunction splitArray(array, chunkSize) {\r\n  const chunkedArray = [];\r\n  for (let i = 0; i < array.length; i += chunkSize) {\r\n    chunkedArray.push(array.slice(i, i + chunkSize));\r\n  }\r\n  return chunkedArray;\r\n}\r\n\r\nconst FoodWorldCup = () => {\r\n  const [round, setRound] = useState(1);\r\n  const shuffledOptions = shuffleArray(options);\r\n  const teams = splitArray(shuffledOptions, 2);\r\n  const [matches, setMatches] = useState(teams);\r\n\r\n  function handleMatchWinner(winner) {\r\n    const updatedMatches = matches.map((match, index) => {\r\n      if (index === round - 1) {\r\n        return [...match, winner];\r\n      }\r\n      return match;\r\n    });\r\n\r\n    setMatches(updatedMatches);\r\n\r\n    if (updatedMatches.length === 1) {\r\n      // 토너먼트 종료\r\n      console.log(\"토너먼트 종료. 최종 승자: \", updatedMatches[0][2]);\r\n    } else {\r\n      setRound(round + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>토너먼트 라운드 {round}</h1>\r\n      {matches.map((match, index) => (\r\n        <div key={index}>\r\n          <p>{match[0]} vs. {match[1]}</p>\r\n          {match.length === 2 ? (\r\n            <button onClick={() => handleMatchWinner(match[0])}>승자: {match[0]}</button>\r\n          ) : (\r\n            <p>승자: {match[2]}</p>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodWorldCup;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const options = [\"치킨\", \"피자\", \"햄버거\", \"삼겹살\", \"족발보쌈\", \"국수\", \"초밥\", \"마라탕\"];\r\n\r\n// const FoodWorldCup = () => {\r\n//   const [round, setRound] = useState(1);\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n//   const [isNextMatchEnabled, setIsNextMatchEnabled] = useState(false);\r\n\r\n//   const initializeMatches = () => {\r\n//     const initialMatches = [];\r\n//     for (let i = 0; i < options.length; i += 2) {\r\n//       initialMatches.push([i, i + 1]);\r\n//     }\r\n//     setMatches(initialMatches);\r\n//   };\r\n\r\n//   const startRound = () => {\r\n//     if (round <= 4) {\r\n//       initializeMatches();\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (optionIndex) => {\r\n//     setSelectedOption(optionIndex);\r\n//     setIsNextMatchEnabled(true);\r\n//   };\r\n\r\n//   const handleNextMatch = () => {\r\n//     if (selectedOption !== null) {\r\n//       const updatedMatches = [...matches];\r\n//       const selectedMatchIndex = Math.floor(selectedOption / 2);\r\n//       updatedMatches[selectedMatchIndex].push(selectedOption);\r\n//       setMatches(updatedMatches);\r\n//       setSelectedOption(null);\r\n//       setIsNextMatchEnabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleNextRound = () => {\r\n//     if (matches.length === 1) {\r\n//       setRound(round + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"food-world-cup\">\r\n//       {round <= 4 ? (\r\n//         <div>\r\n//           <h2>Round {round}</h2>\r\n//           <div className=\"match\">\r\n//             {matches.length > 0 && matches[0].map((optionIndex) => (\r\n//               <button\r\n//                 key={optionIndex}\r\n//                 onClick={() => handleOptionClick(optionIndex)}\r\n//                 disabled={selectedOption !== null}\r\n//               >\r\n//                 {options[optionIndex]}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           <button onClick={handleNextMatch} disabled={!isNextMatchEnabled}>\r\n//             Next Match\r\n//           </button>\r\n//           {round < 4 && (\r\n//             <button onClick={handleNextRound} disabled={matches.length !== 1}>\r\n//               Next Round\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"result\">\r\n//           <h2>Result</h2>\r\n//           <p>You selected: {options[matches[0][0]]}</p>\r\n//         </div>\r\n//       )}\r\n//       {round === 1 && (\r\n//         <button onClick={startRound}>Start Tournament</button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FoodWorldCup;"],"mappings":"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MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAApB,EAAA,CAvCKD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAyClB,eAAeA,YAAY;;AAE3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}